"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[426],{3256:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/learning reranker pt 1-347ddd3e34525fbc12dfc48546e5a2a5.png"},4099:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/learning reranker pt 2-54a35d954cdea7199ffdb48420e1d9b1.png"},6986:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/learning reranker pt 3-0ecd54c9e9ac7c9e29c08f02acf0e351.png"},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var s=r(6540);const i={},l=s.createContext(i);function o(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(l.Provider,{value:n},e.children)}},9663:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"features/learning-reranker","title":"Learning Reranker System","description":"AGRO\'s learning reranker is a complete ML pipeline that continuously improves search quality by collecting user feedback and training a cross-encoder model specifically on YOUR codebase.","source":"@site/docs/features/learning-reranker.md","sourceDirName":"features","slug":"/features/learning-reranker","permalink":"/agro-rag-engine/features/learning-reranker","draft":false,"unlisted":false,"editUrl":"https://github.com/DMontgomery40/agro-rag-engine/tree/main/website/docs/features/learning-reranker.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"RAG System","permalink":"/agro-rag-engine/features/rag"},"next":{"title":"MCP Integration","permalink":"/agro-rag-engine/features/mcp"}}');var i=r(4848),l=r(8453);const o={sidebar_position:2},t="Learning Reranker System",d={},c=[{value:"What It Does",id:"what-it-does",level:2},{value:"How Reranking Works",id:"how-reranking-works",level:2},{value:"Training Data Format",id:"training-data-format",level:2},{value:"GUI Features",id:"gui-features",level:2},{value:"Feedback Collection",id:"feedback-collection",level:3},{value:"How to Use Feedback",id:"how-to-use-feedback",level:3},{value:"Complete Training Workflow",id:"complete-training-workflow",level:2},{value:"Step 1: Mine Triplets",id:"step-1-mine-triplets",level:3},{value:"From Logged Queries",id:"from-logged-queries",level:4},{value:"From Golden Questions",id:"from-golden-questions",level:4},{value:"Step 2: Train Model",id:"step-2-train-model",level:3},{value:"Step 3: Evaluate",id:"step-3-evaluate",level:3},{value:"Step 4: Promote to Production",id:"step-4-promote-to-production",level:3},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"Get Model Info",id:"get-model-info",level:3},{value:"Mine Triplets",id:"mine-triplets",level:3},{value:"Train Model",id:"train-model",level:3},{value:"Evaluate Model",id:"evaluate-model",level:3},{value:"View Logs",id:"view-logs",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Model Hot-Reloading",id:"model-hot-reloading",level:3},{value:"Complete Training Example",id:"complete-training-example",level:2},{value:"Continuous Improvement Loop",id:"continuous-improvement-loop",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"&quot;Only 1 triplets (&lt; 30); abort&quot;",id:"only-1-triplets--30-abort",level:3},{value:"&quot;No feedback events logged&quot;",id:"no-feedback-events-logged",level:3},{value:"&quot;Model not reloading&quot;",id:"model-not-reloading",level:3},{value:"&quot;Eval metrics not improving&quot;",id:"eval-metrics-not-improving",level:3},{value:"Advanced Topics",id:"advanced-topics",level:2},{value:"Custom Reranker Backends",id:"custom-reranker-backends",level:3},{value:"Triplet Mining Strategies",id:"triplet-mining-strategies",level:3},{value:"Integration with Other Components",id:"integration-with-other-components",level:3},{value:"Performance Metrics",id:"performance-metrics",level:2},{value:"What Good Scores Look Like",id:"what-good-scores-look-like",level:3},{value:"Tracking Progress",id:"tracking-progress",level:3},{value:"Files Reference",id:"files-reference",level:2},{value:"See Also",id:"see-also",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"learning-reranker-system",children:"Learning Reranker System"})}),"\n",(0,i.jsxs)(n.p,{children:["AGRO's learning reranker is a ",(0,i.jsx)(n.strong,{children:"complete ML pipeline"})," that continuously improves search quality by collecting user feedback and training a cross-encoder model specifically on YOUR codebase."]}),"\n",(0,i.jsx)(n.h2,{id:"what-it-does",children:"What It Does"}),"\n",(0,i.jsxs)(n.p,{children:["The learning reranker transforms AGRO from a static search system into one that ",(0,i.jsx)(n.strong,{children:"learns from every interaction"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collects implicit feedback"})," - Tracks which code chunks you click on"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collects explicit feedback"})," - Thumbs up/down buttons on search results"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mines training data"})," - Extracts triplets (query, good_doc, bad_doc) from feedback logs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Trains cross-encoder"})," - Fine-tunes a reranking model on your codebase patterns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Evaluates improvements"})," - Measures ranking quality with MRR and Hit@K metrics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Promotes models automatically"})," - Deploys better models to production with hot-reload"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This creates a ",(0,i.jsx)(n.strong,{children:"feedback loop"})," where AGRO gets better at finding the code you actually need over time, not just what worked for someone else's repository."]}),"\n",(0,i.jsx)(n.h2,{id:"how-reranking-works",children:"How Reranking Works"}),"\n",(0,i.jsx)(n.p,{children:"In the retrieval flow, reranking happens at the crucial final stage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'User Query: "Where is OAuth validated?"\n   \u2193\nBM25 Search (keyword matching)\n   \u2192 Finds 100 candidates with "OAuth", "validate", "token"\n   \u2193\nVector Search (semantic similarity)\n   \u2192 Finds 100 candidates semantically similar to query\n   \u2193\nFusion (combine BM25 + Vector scores via RRF)\n   \u2192 Merged list of ~150 unique candidates\n   \u2193\nCross-Encoder Rerank \u2190 THE LEARNING RERANKER IS HERE\n   \u2192 Scores each (query, document) pair: 0.0 to 1.0\n   \u2192 "How relevant is this code to this specific question?"\n   \u2193\nTop K Results (sorted by rerank score)\n   \u2192 auth/oauth.py:45-67 (0.94)\n   \u2192 middleware/token.py:89-120 (0.87)\n   \u2192 server/auth.py:120-145 (0.78)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The cross-encoder takes each ",(0,i.jsx)(n.code,{children:"(query, document)"})," pair and outputs a relevance score from 0.0 to 1.0. Unlike BM25 (keyword matching) or vector similarity (general semantic similarity), the cross-encoder is trained to understand: ",(0,i.jsx)(n.strong,{children:'"Is THIS specific code chunk the answer to THIS specific question in THIS codebase?"'})]}),"\n",(0,i.jsx)(n.h2,{id:"training-data-format",children:"Training Data Format"}),"\n",(0,i.jsxs)(n.p,{children:["Training uses ",(0,i.jsx)(n.strong,{children:"triplets"}),": a query, a positive example (good answer), and negative examples (bad answers):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "query": "How is OAuth token validated?",\n  "positive_text": "function validateToken(token) { const decoded = jwt.verify(token, SECRET); return checkExpiry(decoded); }",\n  "positive_doc_id": "auth/oauth.ts:45-67",\n  "negative_texts": [\n    "import axios from \'axios\'",\n    "export default config"\n  ],\n  "negative_doc_ids": [\n    "utils/http.ts:1-3",\n    "config/index.ts:10-12"\n  ],\n  "source": "click_feedback"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The model learns: ",(0,i.jsx)(n.strong,{children:"positive_text"})," is more relevant to ",(0,i.jsx)(n.strong,{children:"query"})," than ",(0,i.jsx)(n.strong,{children:"negative_texts"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"gui-features",children:"GUI Features"}),"\n",(0,i.jsx)(n.h3,{id:"feedback-collection",children:"Feedback Collection"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Learning Reranker Interface",src:r(3256).A+"",width:"2155",height:"1198"})}),"\n",(0,i.jsxs)(n.p,{children:["The reranker GUI (",(0,i.jsx)(n.code,{children:"gui/js/reranker.js"})," - 28KB of features) adds:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Click tracking"})," - Automatically logs when you click a code chunk (implicit positive signal)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Thumbs up/down buttons"})," - Explicitly mark results as helpful or not helpful"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time feedback"})," - Sends events to ",(0,i.jsx)(n.code,{children:"/api/telemetry/event"})," immediately"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Reranker Training Progress",src:r(4099).A+"",width:"2179",height:"1174"})}),"\n",(0,i.jsx)(n.p,{children:"Every click or rating generates an event like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "event_id": "abc-123-def",\n  "query": "where is auth validated",\n  "doc_id": "auth/oauth.ts:45-67",\n  "rating": 5,\n  "source": "click",\n  "timestamp": "2025-10-15T14:32:10.123Z"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Rating values:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"5"})," = thumbs up or clicked result"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"})," = thumbs down"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-to-use-feedback",children:"How to Use Feedback"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Search for something"})," in AGRO"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Click on a helpful result"})," \u2192 automatically logged as positive feedback"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Click thumbs up"})," on great results \u2192 explicitly marked as excellent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Click thumbs down"})," on bad results \u2192 explicitly marked as not relevant"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["All feedback goes to ",(0,i.jsx)(n.code,{children:"data/logs/queries.jsonl"})," for later mining into training data."]}),"\n",(0,i.jsx)(n.h2,{id:"complete-training-workflow",children:"Complete Training Workflow"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Reranker Full Pipeline",src:r(6986).A+"",width:"2183",height:"1349"})}),"\n",(0,i.jsx)(n.h3,{id:"step-1-mine-triplets",children:"Step 1: Mine Triplets"}),"\n",(0,i.jsx)(n.p,{children:"Generate training data from feedback logs or golden test questions."}),"\n",(0,i.jsx)(n.h4,{id:"from-logged-queries",children:"From Logged Queries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Mines triplets from data/logs/queries.jsonl\npython scripts/mine_triplets.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"This looks for queries where users rated results (clicks or thumbs up/down), then creates triplets with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Positives"}),": Results rated 4-5 stars (thumbs up, clicks)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Negatives"}),": Results rated 1-2 stars (thumbs down) or unclicked"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Output: ",(0,i.jsx)(n.code,{children:"data/training/triplets.jsonl"})]}),"\n",(0,i.jsx)(n.h4,{id:"from-golden-questions",children:"From Golden Questions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Mines triplets from golden.json test questions\npython scripts/mine_from_golden.py\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This runs each golden question through retrieval and creates triplets by matching results against ",(0,i.jsx)(n.code,{children:"expect_paths"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "q": "How is OAuth validated?",\n  "repo": "agro",\n  "expect_paths": ["auth", "oauth", "token"]\n}\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Positives"}),": Docs where ",(0,i.jsx)(n.code,{children:"file_path"})," contains any ",(0,i.jsx)(n.code,{children:"expect_paths"})," substring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Negatives"}),": Docs that don't match"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This is ",(0,i.jsx)(n.strong,{children:"great for bootstrapping"})," training data when you don't have enough logged queries yet."]}),"\n",(0,i.jsx)(n.h3,{id:"step-2-train-model",children:"Step 2: Train Model"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Train cross-encoder on triplets.jsonl\npython scripts/train_reranker.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"This:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Loads ",(0,i.jsx)(n.code,{children:"data/training/triplets.jsonl"})]}),"\n",(0,i.jsx)(n.li,{children:"Fine-tunes a cross-encoder (default: BAAI/bge-reranker-v2-m3)"}),"\n",(0,i.jsxs)(n.li,{children:["Saves model to ",(0,i.jsx)(n.code,{children:"models/cross-encoder-agro-YYYYMMDD-HHMMSS/"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Training uses ",(0,i.jsx)(n.strong,{children:"triplet loss"}),": pushes positive docs closer to query embedding, negative docs farther away."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Training output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Loading triplets from data/training/triplets.jsonl\nFound 127 triplets\nTraining cross-encoder on 127 examples\nEpoch 1/3: loss=0.42\nEpoch 2/3: loss=0.28\nEpoch 3/3: loss=0.19\nModel saved to models/cross-encoder-agro-20251015-143210/\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-3-evaluate",children:"Step 3: Evaluate"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Test the trained model on golden.json questions\npython scripts/eval_reranker.py \\\n  --model models/cross-encoder-agro-20251015-143210\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Metrics:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"MRR (Mean Reciprocal Rank)"}),": Average of ",(0,i.jsx)(n.code,{children:"1/rank"})," where rank is position of first correct result"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"1.0 = perfect (correct result always #1)"}),"\n",(0,i.jsx)(n.li,{children:"0.5 = typically rank #2"}),"\n",(0,i.jsx)(n.li,{children:"0.33 = typically rank #3"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Hit@K"}),": Percentage of queries where any correct result appears in top K"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hit@1 = 80% means 80% of queries have correct answer in #1 position"}),"\n",(0,i.jsx)(n.li,{children:"Hit@5 = 95% means 95% have correct answer in top 5"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Evaluating model: models/cross-encoder-agro-20251015-143210\nGolden questions: 79\n\nMRR: 0.847\nHit@1: 76.2%\nHit@3: 90.5%\nHit@5: 95.2%\nHit@10: 98.1%\n\n\u2713 Evaluation saved to data/evals/latest.json\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Results are saved to ",(0,i.jsx)(n.code,{children:"data/evals/latest.json"})," with human-readable timestamps."]}),"\n",(0,i.jsx)(n.h3,{id:"step-4-promote-to-production",children:"Step 4: Promote to Production"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Deploy if eval scores are good enough\npython scripts/promote_reranker.py \\\n  --model models/cross-encoder-agro-20251015-143210\n"})}),"\n",(0,i.jsx)(n.p,{children:"This:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Checks you have at least 30 triplets (can override with ",(0,i.jsx)(n.code,{children:"--min N"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Verifies eval metrics exist"}),"\n",(0,i.jsxs)(n.li,{children:["Copies model to ",(0,i.jsx)(n.code,{children:"models/cross-encoder-agro/"})," (production path)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The server will ",(0,i.jsx)(n.strong,{children:"auto-reload the new model within 60 seconds"})," (hot-reload, no restart needed)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Promotion output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Checking model: models/cross-encoder-agro-20251015-143210\n\u2713 Found 127 training triplets (>= 30)\n\u2713 Evaluation metrics present\n\u2713 MRR: 0.847 (excellent)\n\u2713 Hit@5: 95.2% (excellent)\n\nPromoting to production: models/cross-encoder-agro/\n\u2713 Model promoted successfully\n\u2713 Server will auto-reload within 60 seconds\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,i.jsx)(n.p,{children:"All reranker management is available via HTTP API."}),"\n",(0,i.jsx)(n.h3,{id:"get-model-info",children:"Get Model Info"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8012/api/reranker/info\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "model_path": "models/cross-encoder-agro",\n  "backend": "sentence-transformers",\n  "loaded": true,\n  "last_check": "Oct 15, 2025 2:32 PM",\n  "eval_metrics": {\n    "mrr": 0.847,\n    "hit_at_5": 0.952\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mine-triplets",children:"Mine Triplets"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X POST http://localhost:8012/api/reranker/mine\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Runs ",(0,i.jsx)(n.code,{children:"mine_triplets.py"})," in background. Check status:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8012/api/reranker/status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"train-model",children:"Train Model"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X POST http://localhost:8012/api/reranker/train\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Runs ",(0,i.jsx)(n.code,{children:"train_reranker.py"})," in background."]}),"\n",(0,i.jsx)(n.h3,{id:"evaluate-model",children:"Evaluate Model"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Evaluate specific model\ncurl -X POST http://localhost:8012/api/reranker/evaluate \\\n  -H "Content-Type: application/json" \\\n  -d \'{"model_path": "models/cross-encoder-agro-20251015-143210"}\'\n\n# Or evaluate current production model\ncurl -X POST http://localhost:8012/api/reranker/evaluate\n'})}),"\n",(0,i.jsx)(n.p,{children:"Get latest eval results:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8012/api/reranker/eval/latest\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "Oct 15, 2025 2:45 PM",\n  "model_path": "models/cross-encoder-agro",\n  "metrics": {\n    "mrr": 0.847,\n    "hit_at_1": 0.762,\n    "hit_at_3": 0.905,\n    "hit_at_5": 0.952,\n    "hit_at_10": 0.981\n  },\n  "total_questions": 79\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"view-logs",children:"View Logs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8012/api/reranker/logs\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns last 100 lines of background job output (mine/train/eval)."}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Model path (default: models/cross-encoder-agro)\nexport AGRO_RERANKER_MODEL_PATH=models/my-custom-reranker\n\n# Backend (default: sentence-transformers)\nexport AGRO_RERANKER_BACKEND=sentence-transformers\n\n# Log path for feedback events\nexport AGRO_LOG_PATH=data/logs/queries.jsonl\n\n# Hot-reload interval (default: 60 seconds)\nexport AGRO_RERANKER_RELOAD_INTERVAL=30\n"})}),"\n",(0,i.jsx)(n.h3,{id:"model-hot-reloading",children:"Model Hot-Reloading"}),"\n",(0,i.jsxs)(n.p,{children:["The server checks every 60 seconds if ",(0,i.jsx)(n.code,{children:"models/cross-encoder-agro/"})," has been updated (via mtime). When it detects changes, it automatically reloads the new model without restarting."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"This means:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Train a new model \u2192 saves to ",(0,i.jsx)(n.code,{children:"models/cross-encoder-agro-TIMESTAMP/"})]}),"\n",(0,i.jsxs)(n.li,{children:["Evaluate it \u2192 ",(0,i.jsx)(n.code,{children:"python scripts/eval_reranker.py --model models/cross-encoder-agro-TIMESTAMP"})]}),"\n",(0,i.jsxs)(n.li,{children:["Promote it \u2192 ",(0,i.jsx)(n.code,{children:"python scripts/promote_reranker.py --model models/cross-encoder-agro-TIMESTAMP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Wait ~60 seconds"})," \u2192 server auto-reloads"]}),"\n",(0,i.jsx)(n.li,{children:"New searches use new model"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"No server restart required."})}),"\n",(0,i.jsx)(n.h2,{id:"complete-training-example",children:"Complete Training Example"}),"\n",(0,i.jsx)(n.p,{children:"Here's a full cycle from scratch:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 1. Mine training data from golden.json (great for bootstrapping)\npython scripts/mine_from_golden.py\n# Output: Mined 79 triplets from 79 golden questions\n\n# 2. Train cross-encoder\npython scripts/train_reranker.py\n# Output: Trained model saved to models/cross-encoder-agro-20251015-143210/\n\n# 3. Evaluate on golden questions\npython scripts/eval_reranker.py --model models/cross-encoder-agro-20251015-143210\n# Output: MRR: 0.847, Hit@1: 76.2%, Hit@5: 95.2%\n\n# 4. Promote to production\npython scripts/promote_reranker.py --model models/cross-encoder-agro-20251015-143210\n# Output: \u2713 Promoted to models/cross-encoder-agro/\n\n# 5. Wait for hot-reload (or restart server)\n# Server will auto-load new model within 60 seconds\n"})}),"\n",(0,i.jsx)(n.h2,{id:"continuous-improvement-loop",children:"Continuous Improvement Loop"}),"\n",(0,i.jsx)(n.p,{children:"Set up a weekly or monthly training cycle:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Weekly or after collecting more feedback:\n\n# 1. Mine new triplets from usage logs\ncurl -X POST http://localhost:8012/api/reranker/mine\n\n# 2. Train new model\ncurl -X POST http://localhost:8012/api/reranker/train\n\n# 3. Check logs\ncurl http://localhost:8012/api/reranker/logs\n\n# 4. Evaluate (once training completes)\ncurl -X POST http://localhost:8012/api/reranker/evaluate\n\n# 5. Check metrics\ncurl http://localhost:8012/api/reranker/eval/latest\n\n# 6. If metrics improved, promote the model\npython scripts/promote_reranker.py --model models/cross-encoder-agro-TIMESTAMP\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"only-1-triplets--30-abort",children:'"Only 1 triplets (< 30); abort"'}),"\n",(0,i.jsx)(n.p,{children:"You need at least 30 training examples. Options:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mine from golden.json"}),": ",(0,i.jsx)(n.code,{children:"python scripts/mine_from_golden.py"})," (generates ~1 triplet per question with expect_paths)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collect more feedback"}),": Use AGRO more, click on results, use thumbs up/down buttons"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lower threshold temporarily"}),": ",(0,i.jsx)(n.code,{children:"python scripts/promote_reranker.py --min 1"})," (not recommended for production)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"no-feedback-events-logged",children:'"No feedback events logged"'}),"\n",(0,i.jsx)(n.p,{children:"Check:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Is reranker.js loaded in GUI? (look for feedback buttons on search results)"}),"\n",(0,i.jsxs)(n.li,{children:["Are events being sent? (check browser console for POST to ",(0,i.jsx)(n.code,{children:"/api/telemetry/event"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Is telemetry enabled? (check ",(0,i.jsx)(n.code,{children:"data/logs/queries.jsonl"})," exists and is writable)"]}),"\n",(0,i.jsx)(n.li,{children:"Are you actually clicking on results? (passive browsing doesn't generate feedback)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"model-not-reloading",children:'"Model not reloading"'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Wait 60 seconds after promoting (hot-reload interval)"}),"\n",(0,i.jsxs)(n.li,{children:["Or restart server: ",(0,i.jsx)(n.code,{children:'pkill -f "uvicorn.*app:app" && uvicorn server.app:app'})]}),"\n",(0,i.jsxs)(n.li,{children:["Check logs for reload message: ",(0,i.jsx)(n.code,{children:"tail -f /tmp/agro-server.log"})]}),"\n",(0,i.jsxs)(n.li,{children:["Verify mtime changed: ",(0,i.jsx)(n.code,{children:"ls -l models/cross-encoder-agro/"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"eval-metrics-not-improving",children:'"Eval metrics not improving"'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Expand golden.json"})," with more diverse questions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check expect_paths accuracy"}),": Are they too broad or too narrow?"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verify training triplets are high quality"}),": ",(0,i.jsx)(n.code,{children:"head data/training/triplets.jsonl"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Increase training epochs"})," or adjust learning rate in ",(0,i.jsx)(n.code,{children:"train_reranker.py"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collect more real usage data"}),": Bootstrap with golden, then switch to user logs"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,i.jsx)(n.h3,{id:"custom-reranker-backends",children:"Custom Reranker Backends"}),"\n",(0,i.jsx)(n.p,{children:"AGRO supports multiple reranker backends:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"sentence-transformers"})," (default)"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Local cross-encoder model"}),"\n",(0,i.jsx)(n.li,{children:"Fast, no API calls"}),"\n",(0,i.jsx)(n.li,{children:"Models: BAAI/bge-reranker-v2-m3, ms-marco-MiniLM, etc."}),"\n",(0,i.jsx)(n.li,{children:"Best for: Production, privacy, zero API cost"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"openai"})," (experimental)"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses OpenAI embeddings + similarity scoring"}),"\n",(0,i.jsx)(n.li,{children:"Requires OPENAI_API_KEY"}),"\n",(0,i.jsx)(n.li,{children:"Slower, costs per query"}),"\n",(0,i.jsx)(n.li,{children:"Best for: Quick testing without training"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Set via ",(0,i.jsx)(n.code,{children:"AGRO_RERANKER_BACKEND=openai"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"triplet-mining-strategies",children:"Triplet Mining Strategies"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Golden Questions"})," (",(0,i.jsx)(n.code,{children:"scripts/mine_from_golden.py"}),"):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Clean, controlled test set"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Limited diversity, needs manual curation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Best for"}),": Bootstrapping, regression testing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Yields"}),": ~1 triplet per golden question"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"User Logs"})," (",(0,i.jsx)(n.code,{children:"scripts/mine_triplets.py"}),"):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Real usage patterns, diverse queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Noisy, needs rating thresholds tuning"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Best for"}),": Continuous improvement, production models"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Yields"}),": Variable, depends on user activity"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Hybrid Approach"})," (recommended):"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Bootstrap with golden questions (get to 30+ triplets)"}),"\n",(0,i.jsx)(n.li,{children:"Continuously mine from logs as users provide feedback"}),"\n",(0,i.jsx)(n.li,{children:"Periodically expand golden.json with new common queries"}),"\n",(0,i.jsx)(n.li,{children:"Retrain monthly or when you have 50+ new triplets"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,i.jsx)(n.p,{children:"The reranker integrates with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hybrid Search"})," (",(0,i.jsx)(n.code,{children:"retrieval/hybrid_search.py:170"}),") - Rescores BM25+Vector results"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Telemetry"})," (",(0,i.jsx)(n.code,{children:"server/telemetry.py"}),") - Logs feedback events to queries.jsonl"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Golden Tests"})," (",(0,i.jsx)(n.code,{children:"golden.json"}),") - Provides eval questions and training data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GUI"})," (",(0,i.jsx)(n.code,{children:"gui/js/reranker.js"}),") - Collects user feedback via clicks and buttons"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MCP Server"})," - Uses reranker for all ",(0,i.jsx)(n.code,{children:"rag_answer"})," and ",(0,i.jsx)(n.code,{children:"rag_search"})," calls"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,i.jsx)(n.h3,{id:"what-good-scores-look-like",children:"What Good Scores Look Like"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"MRR (Mean Reciprocal Rank):"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"0.9-1.0"}),": Excellent - correct answer almost always #1"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"0.7-0.9"}),": Good - correct answer usually in top 2-3"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"0.5-0.7"}),": Acceptable - correct answer usually in top 4-5"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"< 0.5"}),": Needs improvement"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Hit@5:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"> 95%"}),": Excellent - almost all queries find correct answer in top 5"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"85-95%"}),": Good - most queries successful"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"75-85%"}),": Acceptable - decent retrieval quality"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"< 75%"}),": Needs improvement"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tracking-progress",children:"Tracking Progress"}),"\n",(0,i.jsx)(n.p,{children:"Keep a log of eval results over time:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# After each training cycle\necho "$(date): MRR=$(curl -s localhost:8012/api/reranker/eval/latest | jq .metrics.mrr)" \\\n  >> reranker_progress.log\n'})}),"\n",(0,i.jsx)(n.p,{children:"Graph your progress:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"MRR going up = reranker learning your codebase"}),"\n",(0,i.jsx)(n.li,{children:"Hit@K going up = fewer failed searches"}),"\n",(0,i.jsx)(n.li,{children:"Training loss going down = model converging"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"files-reference",children:"Files Reference"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"File"}),(0,i.jsx)(n.th,{children:"Purpose"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"gui/js/reranker.js"})}),(0,i.jsx)(n.td,{children:"Feedback collection UI (click tracking, thumbs buttons)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"server/telemetry.py"})}),(0,i.jsx)(n.td,{children:"Logs feedback events to queries.jsonl"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"server/reranker.py"})}),(0,i.jsx)(n.td,{children:"Model loading, hot-reload, inference"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"server/reranker_info.py"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"/api/reranker/info"})," endpoint"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"retrieval/hybrid_search.py"})}),(0,i.jsxs)(n.td,{children:["Calls ",(0,i.jsx)(n.code,{children:"ce_rerank()"})," at line 170"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scripts/mine_triplets.py"})}),(0,i.jsx)(n.td,{children:"Mines triplets from queries.jsonl"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scripts/mine_from_golden.py"})}),(0,i.jsx)(n.td,{children:"Mines triplets from golden.json"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scripts/train_reranker.py"})}),(0,i.jsx)(n.td,{children:"Trains cross-encoder on triplets.jsonl"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scripts/eval_reranker.py"})}),(0,i.jsx)(n.td,{children:"Evaluates model on golden.json"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scripts/promote_reranker.py"})}),(0,i.jsx)(n.td,{children:"Promotes model to production path"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data/logs/queries.jsonl"})}),(0,i.jsx)(n.td,{children:"Feedback event log"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data/training/triplets.jsonl"})}),(0,i.jsx)(n.td,{children:"Training data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data/evals/latest.json"})}),(0,i.jsx)(n.td,{children:"Most recent eval metrics"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"models/cross-encoder-agro/"})}),(0,i.jsx)(n.td,{children:"Production model (hot-reloaded)"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./rag",children:"RAG System"})," - How hybrid search works"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../api/reference",children:"API Reference"})," - All HTTP endpoints"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../configuration/performance",children:"Configuration"})," - Tuning retrieval parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../operations/monitoring",children:"Monitoring"})," - Tracking reranker performance"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);