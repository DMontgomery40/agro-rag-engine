"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[544],{2274:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"operations/troubleshooting","title":"Troubleshooting","description":"Common issues and solutions for AGRO deployment, retrieval, and performance problems.","source":"@site/docs/operations/troubleshooting.md","sourceDirName":"operations","slug":"/operations/troubleshooting","permalink":"/agro-rag-engine/operations/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/DMontgomery40/agro-rag-engine/tree/main/website/docs/operations/troubleshooting.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Monitoring","permalink":"/agro-rag-engine/operations/monitoring"}}');var o=s(4848),i=s(8453);const l={sidebar_position:3},c="Troubleshooting",a={},t=[{value:"Quick Diagnostics",id:"quick-diagnostics",level:2},{value:"Health Check Script",id:"health-check-script",level:3},{value:"Docker Issues",id:"docker-issues",level:2},{value:"Container Won&#39;t Start",id:"container-wont-start",level:3},{value:"Qdrant Connection Errors",id:"qdrant-connection-errors",level:3},{value:"Redis Errors",id:"redis-errors",level:3},{value:"Indexing Issues",id:"indexing-issues",level:2},{value:"&quot;No chunks generated&quot; / Empty Index",id:"no-chunks-generated--empty-index",level:3},{value:"Embedding Failures",id:"embedding-failures",level:3},{value:"Slow Indexing",id:"slow-indexing",level:3},{value:"Retrieval Issues",id:"retrieval-issues",level:2},{value:"&quot;No results found&quot; for Known Code",id:"no-results-found-for-known-code",level:3},{value:"Wrong Results / Poor Ranking",id:"wrong-results--poor-ranking",level:3},{value:"Slow Search Queries",id:"slow-search-queries",level:3},{value:"Generation Issues",id:"generation-issues",level:2},{value:"Hallucinated Answers",id:"hallucinated-answers",level:3},{value:"Incomplete Answers",id:"incomplete-answers",level:3},{value:"Performance Issues",id:"performance-issues",level:2},{value:"High Memory Usage",id:"high-memory-usage",level:3},{value:"High CPU Usage",id:"high-cpu-usage",level:3},{value:"MCP Integration Issues",id:"mcp-integration-issues",level:2},{value:"Claude Code Can&#39;t Find MCP Server",id:"claude-code-cant-find-mcp-server",level:3},{value:"MCP Tools Return Errors",id:"mcp-tools-return-errors",level:3},{value:"GUI Issues",id:"gui-issues",level:2},{value:"GUI Won&#39;t Load / Blank Screen",id:"gui-wont-load--blank-screen",level:3},{value:"GUI Features Not Working",id:"gui-features-not-working",level:3},{value:"Common Error Messages",id:"common-error-messages",level:2},{value:"&quot;Collection &#39;code_chunks_agro&#39; not found&quot;",id:"collection-code_chunks_agro-not-found",level:3},{value:"&quot;LOADING Redis is loading the dataset in memory&quot;",id:"loading-redis-is-loading-the-dataset-in-memory",level:3},{value:"&quot;ModuleNotFoundError: No module named &#39;X&#39;&quot;",id:"modulenotfounderror-no-module-named-x",level:3},{value:"&quot;HTTPError: 429 Rate limit exceeded&quot;",id:"httperror-429-rate-limit-exceeded",level:3},{value:"Getting Help",id:"getting-help",level:2},{value:"Collect Debug Information",id:"collect-debug-information",level:3},{value:"Open GitHub Issue",id:"open-github-issue",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"troubleshooting",children:"Troubleshooting"})}),"\n",(0,o.jsx)(n.p,{children:"Common issues and solutions for AGRO deployment, retrieval, and performance problems."}),"\n",(0,o.jsx)(n.h2,{id:"quick-diagnostics",children:"Quick Diagnostics"}),"\n",(0,o.jsx)(n.h3,{id:"health-check-script",children:"Health Check Script"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# Run this first to diagnose issues\n\necho "=== AGRO Health Check ==="\n\n# 1. Check Docker\necho -n "Docker: "\nif docker ps > /dev/null 2>&1; then\n    echo "\u2713 Running"\nelse\n    echo "\u2717 Not running or permission denied"\nfi\n\n# 2. Check containers\necho "Containers:"\ndocker ps --filter "name=qdrant" --format "  qdrant: {{.Status}}"\ndocker ps --filter "name=rag-redis" --format "  redis: {{.Status}}"\ndocker ps --filter "name=agro-grafana" --format "  grafana: {{.Status}}"\n\n# 3. Check API\necho -n "API Server: "\nif curl -s http://127.0.0.1:8012/health > /dev/null; then\n    echo "\u2713 Responding"\nelse\n    echo "\u2717 Not responding"\nfi\n\n# 4. Check Qdrant\necho -n "Qdrant: "\nif curl -s http://127.0.0.1:6333/health > /dev/null; then\n    echo "\u2713 Healthy"\nelse\n    echo "\u2717 Unhealthy or unreachable"\nfi\n\n# 5. Check Redis\necho -n "Redis: "\nif docker exec rag-redis redis-cli ping 2>&1 | grep -q PONG; then\n    echo "\u2713 PONG"\nelse\n    echo "\u2717 No response"\nfi\n\n# 6. Check index\necho "Index stats:"\ncurl -s http://127.0.0.1:8012/api/index/stats | python3 -m json.tool 2>/dev/null || echo "  \u2717 API not responding"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Save as ",(0,o.jsx)(n.code,{children:"health_check.sh"}),", run with ",(0,o.jsx)(n.code,{children:"bash health_check.sh"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"docker-issues",children:"Docker Issues"}),"\n",(0,o.jsx)(n.h3,{id:"container-wont-start",children:"Container Won't Start"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," ",(0,o.jsx)(n.code,{children:"docker compose up -d"})," fails or container exits immediately."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check container logs\ndocker logs qdrant\ndocker logs rag-redis\n\n# Check for port conflicts\nsudo lsof -i :6333  # Qdrant\nsudo lsof -i :6379  # Redis\nsudo lsof -i :8012  # API server\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Port conflict:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Kill conflicting process\nsudo kill -9 $(lsof -t -i:6333)\n\n# Or change port in docker-compose.yml\nports:\n  - "6334:6333"  # Use different host port\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Permission issues:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Fix data directory permissions\nsudo chown -R $(whoami):$(whoami) data/\nchmod -R 755 data/\n\n# Restart containers\ndocker compose down\ndocker compose up -d\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Out of disk space:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check disk usage\ndf -h\n\n# Clean up Docker\ndocker system prune -a --volumes\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"qdrant-connection-errors",children:"Qdrant Connection Errors"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," ",(0,o.jsx)(n.code,{children:"QdrantException: Connection refused"})," or ",(0,o.jsx)(n.code,{children:"Could not connect to Qdrant at http://127.0.0.1:6333"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Is Qdrant running?\ndocker ps | grep qdrant\n\n# Check Qdrant logs\ndocker logs qdrant --tail 50\n\n# Test connection directly\ncurl http://127.0.0.1:6333/health\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Qdrant not running:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose up -d qdrant\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Wrong URL in .env:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Correct URL (check .env)\nQDRANT_URL=http://127.0.0.1:6333\n\n# NOT:\n# QDRANT_URL=http://localhost:6333  # May fail on some systems\n# QDRANT_URL=https://...  # Qdrant uses HTTP by default\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Firewall blocking:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Allow Docker bridge network\nsudo ufw allow from 172.16.0.0/12 to any port 6333\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"redis-errors",children:"Redis Errors"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," ",(0,o.jsx)(n.code,{children:"redis.exceptions.ConnectionError"})," or ",(0,o.jsx)(n.code,{children:"Redis LOADING Dataset in memory"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check Redis status\ndocker exec rag-redis redis-cli ping\n\n# Check logs\ndocker logs rag-redis --tail 50\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Redis still loading AOF:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Wait 30-60 seconds for Redis to finish loading\n# Monitor logs:\ndocker logs -f rag-redis\n\n# Or disable persistence (faster startup, riskier):\n# In docker-compose.yml:\nenvironment:\n  - REDIS_ARGS=--save ""\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Corrupted AOF file:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Stop Redis\ndocker compose stop redis\n\n# Delete corrupted AOF\nrm data/redis/appendonlydir/*\n\n# Restart\ndocker compose up -d redis\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"indexing-issues",children:"Indexing Issues"}),"\n",(0,o.jsx)(n.h3,{id:"no-chunks-generated--empty-index",children:'"No chunks generated" / Empty Index'}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Indexing completes but ",(0,o.jsx)(n.code,{children:"/api/index/stats"})," shows 0 chunks."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check if chunks.jsonl exists and has content\nls -lh data/agro/chunks.jsonl\n\n# Count lines\nwc -l data/agro/chunks.jsonl\n\n# Check first chunk\nhead -n 1 data/agro/chunks.jsonl | python3 -m json.tool\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Wrong SOURCE_DIR:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check .env\necho $SOURCE_DIR\n\n# Should be absolute path to code repository\nSOURCE_DIR=/Users/you/agro-rag-engine  # Good\nSOURCE_DIR=./agro-rag-engine  # Bad (relative path)\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"All files excluded:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check exclude patterns\ncat data/exclude_globs.txt\n\n# Common mistake: excluding too much\n# BAD:\n*.py  # Excludes ALL Python files\n\n# GOOD:\ntests/**/*.py  # Only excludes test files\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"No supported files found:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check what files exist in SOURCE_DIR\nfind $SOURCE_DIR -type f -name "*.py" | head -10\n\n# Supported extensions:\n# .py, .js, .jsx, .ts, .tsx, .go, .java, .rs, .c, .cpp, .sh, .yml, .md\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Tree-sitter failure (silent):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Test chunking manually\npython3 -c \"\nfrom retrieval.ast_chunker import chunk_code\ncode = open('server/app.py').read()\nchunks = chunk_code(code, 'server/app.py', 'python')\nprint(f'Generated {len(chunks)} chunks')\n\"\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"embedding-failures",children:"Embedding Failures"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," ",(0,o.jsx)(n.code,{children:"OpenAIError: API key invalid"})," or ",(0,o.jsx)(n.code,{children:"RateLimitError"})," during indexing."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check API key\necho $OPENAI_API_KEY\n\n# Test API directly\ncurl https://api.openai.com/v1/models \\\n  -H "Authorization: Bearer $OPENAI_API_KEY"\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Invalid API key:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Get new key from platform.openai.com/api-keys\n# Update .env\nOPENAI_API_KEY=sk-proj-...\n\n# Reload environment\nsource .env\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Rate limit hit:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Switch to local embeddings (slower, free)\nEMBEDDING_TYPE=local\nEMBEDDING_MODEL_LOCAL=BAAI/bge-small-en-v1.5\n\n# Or wait and retry:\npython scripts/full_index.py --repo agro --dense-only\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Quota exceeded:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check quota at platform.openai.com/usage\n\n# Use Voyage AI instead (cheaper)\nEMBEDDING_TYPE=voyage\nVOYAGE_API_KEY=...\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"slow-indexing",children:"Slow Indexing"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Indexing takes ",(0,o.jsx)(n.code,{children:"\\>1 hourgt;1 hour"})," for ",(0,o.jsx)(n.code,{children:"\\<10klt;10k"})," files."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check what\'s slow (add verbose logging)\nexport LOG_LEVEL=DEBUG\npython scripts/full_index.py --repo agro\n\n# Watch for:\n# - "Embedding chunk X/Y" (embeddings slow)\n# - "Building BM25 index" (BM25 slow - normal for large repos)\n# - "Generating card for chunk X" (card generation slow)\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Slow embeddings (cloud API):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Batch embeddings (if supported by indexer)\n# Or switch to local embeddings\nEMBEDDING_TYPE=local\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Slow card generation:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Skip cards initially\n# Index code first, generate cards later:\ncurl -X POST http://127.0.0.1:8012/api/cards/build/start \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"repo\": \"agro\"}'\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Large files/chunks:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check chunk sizes\npython3 -c \"\nimport json\nwith open('data/agro/chunks.jsonl') as f:\n    sizes = [len(json.loads(line)['code']) for line in f]\nprint(f'Mean: {sum(sizes)/len(sizes):.0f} chars')\nprint(f'Max: {max(sizes)} chars')\n\"\n\n# If chunks are huge (>5000 chars), adjust target size\n# In ast_chunker.py:\nchunk_code(src, fpath, lang, target=900)  # Default\nchunk_code(src, fpath, lang, target=600)  # Smaller chunks\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"retrieval-issues",children:"Retrieval Issues"}),"\n",(0,o.jsx)(n.h3,{id:"no-results-found-for-known-code",children:'"No results found" for Known Code'}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Query returns empty results even though code exists."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# 1. Check if indexed\ncurl http://127.0.0.1:8012/api/index/stats\n\n# 2. Test BM25 directly\npython3 -c \"\nfrom retrieval.hybrid_search import search\ndocs = search('your query', repo='agro', final_k=10)\nprint(f'Found {len(docs)} results')\nfor d in docs[:3]:\n    print(f\\\"  {d['file_path']}:{d['start_line']} (score: {d['rerank_score']:.3f})\\\")\n\"\n\n# 3. Check Qdrant collection\ncurl http://127.0.0.1:6333/collections/code_chunks_agro\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Index doesn't exist:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Rebuild index\ncurl -X POST http://127.0.0.1:8012/api/index/start \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{"repo": "agro", "force": true}\'\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Query too specific:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Try broader query\n# BAD: "FastAPI endpoint for answering questions using LangGraph"\n# GOOD: "answer endpoint"\n\n# Enable multi-query expansion (should be default)\nQUERY_EXPANSION_COUNT=4\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Wrong repository:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check which repo is active\ncurl http://127.0.0.1:8012/api/config | grep REPO\n\n# Override in query\ncurl 'http://127.0.0.1:8012/search?q=test&repo=agro'\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Discriminative keywords boosting wrong files:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check keywords\ncat discriminative_keywords.json\n\n# If test files are boosted, regenerate\npython scripts/generate_keywords.py --exclude-patterns "tests/**" --save\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"wrong-results--poor-ranking",children:"Wrong Results / Poor Ranking"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Search returns irrelevant results or ranks wrong files #1."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Get detailed scores\ncurl 'http://127.0.0.1:8012/search?q=your+query&top_k=20' | python3 -m json.tool\n\n# Check:\n# - rerank_score (should be >0.6 for top result)\n# - file_path (is expected file in top 5?)\n# - card_hit (did semantic cards help?)\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Reranker not working:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check reranker backend\necho $RERANK_BACKEND\n\n# Test local reranker\npython3 -c \"\nfrom retrieval.rerank import rerank_results\ndocs = [{'code': 'def health(): return ok', 'file_path': 'server/app.py'}]\nresults = rerank_results('health check', docs, top_k=1)\nprint(results[0]['rerank_score'])\n\"\n\n# Expected: >0.5 for relevant result\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Layer bonuses wrong:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check layer bonuses in repos.json\ncat gui/repos.json | python3 -m json.tool\n\n# Adjust via GUI: Settings \u2192 Profiles \u2192 Layer Bonuses\n# Or manually edit repos.json\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Need custom reranker:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Train on your golden questions\ncurl -X POST http://127.0.0.1:8012/api/reranker/mine\ncurl -X POST http://127.0.0.1:8012/api/reranker/train \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"epochs\": 3, \"batch_size\": 16}'\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"slow-search-queries",children:"Slow Search Queries"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Search takes >3 seconds."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Enable LangSmith tracing to see latency breakdown\nLANGCHAIN_TRACING_V2=true\nLANGCHAIN_API_KEY=...\n\n# Make query, get trace URL:\ncurl http://127.0.0.1:8012/api/langsmith/latest\n\n# Check Prometheus metrics\ncurl http://127.0.0.1:9090/api/v1/query?query=agro_request_duration_seconds\n\n# Or Grafana: http://127.0.0.1:3000\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Reranking slow (local model):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Reduce candidates before reranking\nTOPK_SPARSE=50  # Default: 75\nTOPK_DENSE=50   # Default: 75\n\n# Or use Cohere API (faster, costs $0.002/query)\nRERANK_BACKEND=cohere\nCOHERE_API_KEY=...\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Multi-query expansion slow:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Reduce expansion count\nQUERY_EXPANSION_COUNT=2  # Default: 4\n\n# Or disable for simple queries (auto-detected)\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Hydration slow:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Already using lazy hydration? Check:\nHYDRATION_MODE=lazy  # Good (default)\nHYDRATION_MODE=eager  # Bad (loads all code upfront)\n\n# Reduce chars per chunk\nHYDRATION_MAX_CHARS=1000  # Default: 2000\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"generation-issues",children:"Generation Issues"}),"\n",(0,o.jsx)(n.h3,{id:"hallucinated-answers",children:"Hallucinated Answers"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," LLM generates answers not grounded in retrieved code."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check confidence scores\ncurl \'http://127.0.0.1:8012/api/chat\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{"question": "your question", "repo": "agro"}\' \\\n  | python3 -m json.tool | grep confidence\n\n# Low confidence (\\<0.5lt;0.5) should trigger fallback\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Confidence gating too permissive:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Increase thresholds (in .env or repos.json)\nCONF_TOP1=0.70  # Default: 0.62\nCONF_AVG5=0.60  # Default: 0.55\nCONF_ANY=0.60   # Default: 0.55\n\n# Restart server\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Poor retrieval:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Fix retrieval first (see "Wrong Results" section)\n# Hallucination is usually a symptom of bad retrieval\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"System prompt too creative:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Set stricter system prompt\nSYSTEM_PROMPT=\"You answer ONLY from the provided code context. If information is not in the context, say 'I don't have enough context'. Always cite file paths and line ranges.\"\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"incomplete-answers",children:"Incomplete Answers"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Answer is cut off mid-sentence."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check token limits\necho $MAX_COMPLETION_TOKENS\n\n# Check generation model limits\n# GPT-4o: 16k output tokens\n# GPT-4o-mini: 16k output tokens\n# Ollama models: varies (often 2k-4k)\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Hit model token limit:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Use model with higher output limit\nGENERATION_MODEL=gpt-4o  # 16k output\n\n# Or increase limit (if supported)\nMAX_COMPLETION_TOKENS=8192\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Timeout:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Increase request timeout (in gunicorn)\n--timeout 120  # Default\n\n# Or in Nginx proxy\nproxy_read_timeout 300s;\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,o.jsx)(n.h3,{id:"high-memory-usage",children:"High Memory Usage"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Server uses >4GB RAM, Docker containers OOM."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check memory usage\ndocker stats --no-stream\n\n# Check Python process\nps aux | grep uvicorn\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Qdrant using too much memory:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Enable mmap (disk-backed)\n# In docker-compose.yml:\nenvironment:\n  - QDRANT__STORAGE__USE_MMAP=true\n\n# Restart\ndocker compose restart qdrant\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Too many workers:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Reduce Gunicorn workers\ngunicorn --workers 2 ...  # Instead of 4\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"BM25 index too large:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check index size\ndu -sh data/agro/bm25_index/\n\n# If >500MB, consider excluding docs or splitting repos\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Memory leak (rare):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Restart server periodically via systemd\n# In /etc/systemd/system/agro.service:\nRuntimeMaxSec=86400  # Restart daily\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"high-cpu-usage",children:"High CPU Usage"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Server uses >80% CPU even when idle."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check what's running\ntop -p $(pgrep -f uvicorn)\n\n# Check for infinite loops\nstrace -p $(pgrep -f uvicorn) -e trace=read,write\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Reranker hogging CPU:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Switch to API reranker\nRERANK_BACKEND=cohere\n\n# Or limit local reranker to GPU (if available)\n# Set in rerank.py: device='cuda'\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"LangGraph retrying too much:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check iteration limits\n# In langgraph_app.py:\nif it >= 3:  # Default max iterations\n    decision = "fallback"\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Background card generation:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check if card job is running\ncurl http://127.0.0.1:8012/api/cards/build/status/...\n\n# Cancel if needed\ncurl -X POST http://127.0.0.1:8012/api/cards/build/cancel/...\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"mcp-integration-issues",children:"MCP Integration Issues"}),"\n",(0,o.jsx)(n.h3,{id:"claude-code-cant-find-mcp-server",children:"Claude Code Can't Find MCP Server"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," MCP tools don't appear in Claude Code/Codex."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check MCP config\ncat ~/.config/claude/mcp.json\n\n# Test server manually\npython mcp/stdio_server.py\n# Type: {"jsonrpc":"2.0","method":"ping","id":1}\n# Expected: pong response\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Wrong path in mcp.json:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "agro": {\n      "command": "python",\n      "args": ["/absolute/path/to/agro-rag-engine/mcp/stdio_server.py"],\n      "env": {\n        "REPO": "agro"\n      }\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Python not in PATH:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Use full Python path\nwhich python3\n# /usr/local/bin/python3\n\n# In mcp.json:\n"command": "/usr/local/bin/python3"\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Virtual environment not activated:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# MCP server needs access to installed packages\n# Option 1: Use venv Python\n"command": "/path/to/agro-rag-engine/.venv/bin/python"\n\n# Option 2: Install globally (not recommended)\npip install -r requirements.txt\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"mcp-tools-return-errors",children:"MCP Tools Return Errors"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," ",(0,o.jsx)(n.code,{children:"rag_search"})," or ",(0,o.jsx)(n.code,{children:"rag_answer"})," returns error in Claude Code."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Test tool manually via HTTP MCP server\npython mcp/http_server.py --port 8013 &\n\ncurl -X POST http://127.0.0.1:8013/tools/rag_search \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{"query": "test", "repo": "agro"}\'\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Main API server not running:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# MCP server calls http://127.0.0.1:8012/search internally\n# Make sure API is running:\nuvicorn server.app:app --port 8012 &\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Wrong REPO env var:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# In mcp.json:\n"env": {\n  "REPO": "agro"  # Must match indexed repo name\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Network unreachable:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Test connection from MCP server\npython -c \"import requests; print(requests.get('http://127.0.0.1:8012/health').json())\"\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"gui-issues",children:"GUI Issues"}),"\n",(0,o.jsx)(n.h3,{id:"gui-wont-load--blank-screen",children:"GUI Won't Load / Blank Screen"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," ",(0,o.jsx)(n.a,{href:"http://127.0.0.1:8012/",children:"http://127.0.0.1:8012/"})," shows blank page or 404."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check server logs\ntail -f logs/server.log\n\n# Check browser console (F12)\n# Look for JavaScript errors\n\n# Test API directly\ncurl http://127.0.0.1:8012/health\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Server not serving GUI:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check gui/index.html exists\nls -lh gui/index.html\n\n# Restart server\npkill -f uvicorn\nuvicorn server.app:app --port 8012\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"CORS error in browser console:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Add CORS origins to .env\nAGRO_CORS_ORIGINS=http://127.0.0.1:8012,http://localhost:8012\n\n# Restart server\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"JavaScript error:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check browser console for specifics\n# Common: "fetch is not defined" \u2192 update browser\n# Common: "Cannot read property X of undefined" \u2192 API response changed\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"gui-features-not-working",children:"GUI Features Not Working"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Symptom:"})," Clicking buttons does nothing or shows errors."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Open browser DevTools (F12)\n# Check Console for errors\n# Check Network tab for failed requests\n\n# Test API endpoint directly\ncurl http://127.0.0.1:8012/api/index/stats\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"API endpoint missing:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check if endpoint exists in server/app.py\ngrep "def index_stats" server/app.py\n\n# If missing, update AGRO to latest version\ngit pull origin main\npip install -r requirements.txt --force-reinstall\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"JavaScript module not loaded:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check gui/js/ files exist\nls gui/js/\n\n# Check HTML loads them\ngrep "<script" gui/index.html\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"common-error-messages",children:"Common Error Messages"}),"\n",(0,o.jsx)(n.h3,{id:"collection-code_chunks_agro-not-found",children:"\"Collection 'code_chunks_agro' not found\""}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Fix:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Index doesn\'t exist, rebuild\ncurl -X POST http://127.0.0.1:8012/api/index/start \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{"repo": "agro", "force": true}\'\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"loading-redis-is-loading-the-dataset-in-memory",children:'"LOADING Redis is loading the dataset in memory"'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Fix:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Wait 30-60 seconds for Redis to finish loading\n# Or disable persistence:\ndocker compose down\n# Edit docker-compose.yml: REDIS_ARGS=--save ""\ndocker compose up -d\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"modulenotfounderror-no-module-named-x",children:"\"ModuleNotFoundError: No module named 'X'\""}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Fix:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Reinstall dependencies\nsource .venv/bin/activate\npip install -r requirements.txt --force-reinstall\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"httperror-429-rate-limit-exceeded",children:'"HTTPError: 429 Rate limit exceeded"'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Fix:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# OpenAI/Voyage/Cohere rate limit hit\n# Wait a few minutes, or:\n# Switch to local models\nEMBEDDING_TYPE=local\nGENERATION_MODEL=ollama:qwen3-coder:30b\nRERANK_BACKEND=local\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,o.jsx)(n.h3,{id:"collect-debug-information",children:"Collect Debug Information"}),"\n",(0,o.jsx)(n.p,{children:"Before opening an issue, gather:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# 1. System info\nuname -a\npython --version\ndocker --version\n\n# 2. Docker status\ndocker compose ps\ndocker logs qdrant --tail 50 > qdrant.log\ndocker logs rag-redis --tail 50 > redis.log\n\n# 3. API health\ncurl http://127.0.0.1:8012/health > health.json\n\n# 4. Index stats\ncurl http://127.0.0.1:8012/api/index/stats > index_stats.json\n\n# 5. Environment (redact API keys!)\ncat .env | grep -v API_KEY > env_sanitized.txt\n\n# 6. Server logs\ntail -n 100 logs/server.log > server.log\n"})}),"\n",(0,o.jsx)(n.h3,{id:"open-github-issue",children:"Open GitHub Issue"}),"\n",(0,o.jsx)(n.p,{children:"Include:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Problem description"}),"\n",(0,o.jsx)(n.li,{children:"Steps to reproduce"}),"\n",(0,o.jsx)(n.li,{children:"Expected vs actual behavior"}),"\n",(0,o.jsx)(n.li,{children:"Debug info from above"}),"\n",(0,o.jsxs)(n.li,{children:["AGRO version (",(0,o.jsx)(n.code,{children:"git rev-parse HEAD"}),")"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GitHub Issues:"})," ",(0,o.jsx)(n.a,{href:"https://github.com/DMontgomery40/agro-rag-engine/issues",children:"https://github.com/DMontgomery40/agro-rag-engine/issues"})]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/agro-rag-engine/operations/deployment",children:"Deployment"})})," - Production setup"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/agro-rag-engine/development/architecture",children:"Architecture"})})," - System internals"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/agro-rag-engine/development/contributing",children:"Contributing"})})," - Development workflow"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var r=s(6540);const o={},i=r.createContext(o);function l(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);