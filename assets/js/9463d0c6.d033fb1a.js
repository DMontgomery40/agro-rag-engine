"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[442],{2377:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"development/contributing","title":"Contributing","description":"Contributions to AGRO are welcome! This guide covers the development setup, testing procedures, and contribution workflow.","source":"@site/docs/development/contributing.md","sourceDirName":"development","slug":"/development/contributing","permalink":"/agro-rag-engine/development/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/DMontgomery40/agro-rag-engine/tree/main/website/docs/development/contributing.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","previous":{"title":"Alerting System","permalink":"/agro-rag-engine/configuration/alerting"},"next":{"title":"VS Code Setup","permalink":"/agro-rag-engine/development/vscode-setup"}}');var r=s(4848),t=s(8453);const l={sidebar_position:1},a="Contributing",c={},d=[{value:"Development Setup",id:"development-setup",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Quick Start",id:"quick-start",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Testing",id:"testing",level:2},{value:"Running Tests",id:"running-tests",level:3},{value:"Writing Tests",id:"writing-tests",level:3},{value:"Test Requirements",id:"test-requirements",level:3},{value:"Running Evaluations",id:"running-evaluations",level:2},{value:"Add Golden Questions",id:"add-golden-questions",level:3},{value:"Run Evaluations",id:"run-evaluations",level:3},{value:"Eval Metrics",id:"eval-metrics",level:3},{value:"Branch Workflow",id:"branch-workflow",level:2},{value:"Code Style",id:"code-style",level:2},{value:"Python",id:"python",level:3},{value:"TypeScript/JavaScript (GUI)",id:"typescriptjavascript-gui",level:3},{value:"Commit Messages",id:"commit-messages",level:2},{value:"Pull Request Process",id:"pull-request-process",level:2},{value:"PR Checklist",id:"pr-checklist",level:3},{value:"GUI Development",id:"gui-development",level:2},{value:"Architecture",id:"architecture",level:3},{value:"Adding a New GUI Feature",id:"adding-a-new-gui-feature",level:3},{value:"Backend Development",id:"backend-development",level:2},{value:"Adding a New Endpoint",id:"adding-a-new-endpoint",level:3},{value:"Common Development Tasks",id:"common-development-tasks",level:2},{value:"Rebuild Index",id:"rebuild-index",level:3},{value:"Generate Semantic Cards",id:"generate-semantic-cards",level:3},{value:"Train Reranker",id:"train-reranker",level:3},{value:"Clear Logs",id:"clear-logs",level:3},{value:"Debugging",id:"debugging",level:2},{value:"Enable Debug Logging",id:"enable-debug-logging",level:3},{value:"Inspect Qdrant Collection",id:"inspect-qdrant-collection",level:3},{value:"Inspect Redis State",id:"inspect-redis-state",level:3},{value:"View LangSmith Traces",id:"view-langsmith-traces",level:3},{value:"Performance Profiling",id:"performance-profiling",level:2},{value:"Profile Search Latency",id:"profile-search-latency",level:3},{value:"Profile Memory Usage",id:"profile-memory-usage",level:3},{value:"Release Process",id:"release-process",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"License",id:"license",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"contributing",children:"Contributing"})}),"\n",(0,r.jsx)(n.p,{children:"Contributions to AGRO are welcome! This guide covers the development setup, testing procedures, and contribution workflow."}),"\n",(0,r.jsx)(n.h2,{id:"development-setup",children:"Development Setup"}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Python 3.11+"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Docker Desktop"})," (for Qdrant, Redis, Grafana, Prometheus)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Node.js 18+"})," (for GUI development)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Git"})," with LFS support"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/DMontgomery40/agro-rag-engine.git\ncd agro-rag-engine\n\n# Create virtual environment\npython3.11 -m venv .venv\nsource .venv/bin/activate  # On Windows: .venv\\Scripts\\activate\n\n# Install dependencies\npip install -r requirements.txt\n\n# Start infrastructure\ndocker compose up -d\n\n# Copy environment template\ncp .env.example .env\n\n# Edit .env with your settings\n# At minimum, set REPO=agro and add API keys if using cloud models\n\n# Run development server\nmake dev\n# Or manually: uvicorn server.app:app --reload --port 8012\n"})}),"\n",(0,r.jsxs)(n.p,{children:["GUI will be available at ",(0,r.jsx)(n.a,{href:"http://127.0.0.1:8012/",children:"http://127.0.0.1:8012/"})]}),"\n",(0,r.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsxs)(n.p,{children:["Key variables to configure in ",(0,r.jsx)(n.code,{children:".env"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Repository\nREPO=agro\nSOURCE_DIR=/absolute/path/to/your/code\n\n# Models\nEMBEDDING_TYPE=openai  # openai|voyage|local\nGENERATION_MODEL=gpt-4o\nRERANK_BACKEND=local  # local|cohere\n\n# API Keys (if using cloud models)\nOPENAI_API_KEY=sk-...\nVOYAGE_API_KEY=...\nCOHERE_API_KEY=...\n\n# Infrastructure\nQDRANT_URL=http://127.0.0.1:6333\nREDIS_URL=redis://127.0.0.1:6379/0\n\n# Performance\nTOPK_SPARSE=75\nTOPK_DENSE=75\nQUERY_EXPANSION_COUNT=4\n\n# Optional: LangSmith tracing\nLANGCHAIN_TRACING_V2=true\nLANGCHAIN_API_KEY=...\nLANGCHAIN_PROJECT=agro-dev\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.p,{children:["AGRO uses ",(0,r.jsx)(n.strong,{children:"Playwright"})," for GUI tests and ",(0,r.jsx)(n.strong,{children:"pytest"})," for backend tests."]}),"\n",(0,r.jsx)(n.h3,{id:"running-tests",children:"Running Tests"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"All tests:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make test\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"GUI tests only:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start server first\nuvicorn server.app:app --port 8012 &\n\n# Run Playwright tests\nnpx playwright test --config tests/playwright.gui.config.ts\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Backend tests only:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pytest tests/ -v --ignore=tests/gui\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Smoke tests:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Test retrieval pipeline\npython tests/test_retrieval_smoke.py\n\n# Test indexing\npython tests/test_index_smoke.py\n\n# Test MCP server\npython tests/test_mcp_smoke.py\n"})}),"\n",(0,r.jsx)(n.h3,{id:"writing-tests",children:"Writing Tests"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"GUI test example (Playwright):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// tests/gui/navigation.spec.ts\nimport { test, expect } from '@playwright/test';\n\ntest.describe('Navigation', () => {\n  test('should load dashboard', async ({ page }) => {\n    await page.goto('http://127.0.0.1:8012/');\n\n    // Wait for GUI to load\n    await page.waitForSelector('.dashboard', { timeout: 10000 });\n\n    // Check dashboard elements\n    await expect(page.locator('.dashboard')).toBeVisible();\n  });\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Backend test example (pytest):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# tests/test_retrieval.py\nimport pytest\nfrom retrieval.hybrid_search import search\n\ndef test_hybrid_search():\n    """Test hybrid search returns results."""\n    results = search("How does indexing work?", repo="agro", final_k=10)\n\n    assert len(results) > 0, "Search should return results"\n    assert "file_path" in results[0], "Results should include file_path"\n    assert "rerank_score" in results[0], "Results should include rerank_score"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"test-requirements",children:"Test Requirements"}),"\n",(0,r.jsx)(n.p,{children:"All PRs must:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pass all existing tests"})," (no regressions)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add tests for new features"})," (GUI or backend)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Maintain >80% code coverage"})," for new code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Include smoke tests"})," if adding new endpoints"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"running-evaluations",children:"Running Evaluations"}),"\n",(0,r.jsx)(n.p,{children:"AGRO includes a golden test suite for regression tracking."}),"\n",(0,r.jsx)(n.h3,{id:"add-golden-questions",children:"Add Golden Questions"}),"\n",(0,r.jsx)(n.p,{children:"Via GUI:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Navigate to ",(0,r.jsx)(n.strong,{children:"Evals"})," tab"]}),"\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Add Golden Question"})]}),"\n",(0,r.jsx)(n.li,{children:"Enter question and expected file paths"}),"\n",(0,r.jsx)(n.li,{children:"Save"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Via API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://127.0.0.1:8012/api/golden \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n    "question": "How does hybrid search work?",\n    "expect_paths": ["retrieval/hybrid_search.py"],\n    "top_k": 10,\n    "repo": "agro"\n  }\'\n'})}),"\n",(0,r.jsx)(n.h3,{id:"run-evaluations",children:"Run Evaluations"}),"\n",(0,r.jsx)(n.p,{children:"Via GUI:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Navigate to ",(0,r.jsx)(n.strong,{children:"Evals"})," tab"]}),"\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Run Evaluation"})]}),"\n",(0,r.jsx)(n.li,{children:"Wait for results"}),"\n",(0,r.jsx)(n.li,{children:"Compare to baseline"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Via CLI:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Run full evaluation suite\npython scripts/eval_runner.py --repo agro\n\n# Save as baseline\npython scripts/eval_runner.py --repo agro --save-baseline\n"})}),"\n",(0,r.jsx)(n.p,{children:"Via API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Start evaluation\ncurl -X POST http://127.0.0.1:8012/api/eval/run \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{"repo": "agro", "save_baseline": false}\'\n\n# Check results\ncurl http://127.0.0.1:8012/api/eval/results\n'})}),"\n",(0,r.jsx)(n.h3,{id:"eval-metrics",children:"Eval Metrics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Top-1 Accuracy"}),": Expected file in #1 position"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Top-5 Accuracy"}),": Expected file in top 5"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MRR (Mean Reciprocal Rank)"}),": Average 1/rank of first hit"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hit@K"}),": Percentage of queries with expected file in top K"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Acceptable thresholds:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Top-1: >70%"}),"\n",(0,r.jsx)(n.li,{children:"Top-5: >90%"}),"\n",(0,r.jsx)(n.li,{children:"MRR: >0.75"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"branch-workflow",children:"Branch Workflow"}),"\n",(0,r.jsx)(n.p,{children:"AGRO uses a three-branch model:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"development"}),": Active development (default)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"staging"}),": Pre-release hardening"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"main"}),": Production-ready releases"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Workflow:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Create feature branch from development\ngit checkout development\ngit pull origin development\ngit checkout -b feature/your-feature-name\n\n# Make changes, commit\ngit add .\ngit commit -m "feat: Add your feature description"\n\n# Push and open PR to development\ngit push origin feature/your-feature-name\n# Open PR: feature/your-feature-name \u2192 development\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Never push directly to main."})," All changes flow through development \u2192 staging \u2192 main."]}),"\n",(0,r.jsx)(n.h2,{id:"code-style",children:"Code Style"}),"\n",(0,r.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.p,{children:"AGRO follows PEP 8 with some exceptions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Good: Type hints, docstrings, clear variable names\ndef search(query: str, repo: str, final_k: int = 10) -> List[Dict[str, Any]]:\n    """\n    Hybrid search combining BM25 and dense vectors.\n\n    Args:\n        query: Search query string\n        repo: Repository name\n        final_k: Number of results to return\n\n    Returns:\n        List of ranked documents with rerank scores\n    """\n    # Implementation...\n\n# Avoid: Single-letter variables, missing types\ndef s(q, r, k=10):\n    # What does this do?\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Formatting:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Format code with black\nblack server/ retrieval/ indexer/\n\n# Check with flake8\nflake8 server/ retrieval/ indexer/ --max-line-length=120\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typescriptjavascript-gui",children:"TypeScript/JavaScript (GUI)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Good: TypeScript interfaces, JSDoc comments\ninterface SearchResult {\n  file_path: string;\n  start_line: number;\n  end_line: number;\n  rerank_score: number;\n}\n\nasync function searchCode(query: string): Promise<SearchResult[]> {\n  const response = await fetch(`/search?q=${encodeURIComponent(query)}`);\n  return await response.json();\n}\n\n// Avoid: Untyped, unclear\nasync function s(q) {\n  return await fetch(`/search?q=${q}`).then(r => r.json());\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"commit-messages",children:"Commit Messages"}),"\n",(0,r.jsx)(n.p,{children:"Use conventional commits:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"feat: Add semantic card retrieval\nfix: Resolve Qdrant connection timeout\ndocs: Update API endpoint documentation\ntest: Add Playwright test for reranker UI\nrefactor: Extract RRF fusion to separate module\nperf: Optimize BM25 index loading\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<type>: <description>\n\n[optional body]\n\n[optional footer]\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Types:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"feat"}),": New feature"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fix"}),": Bug fix"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docs"}),": Documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"test"}),": Tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"refactor"}),": Code restructure (no behavior change)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"perf"}),": Performance improvement"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"chore"}),": Maintenance (deps, config)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"pull-request-process",children:"Pull Request Process"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Create PR from feature branch \u2192 development"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fill out PR template:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"What changed?"}),"\n",(0,r.jsx)(n.li,{children:"Why?"}),"\n",(0,r.jsx)(n.li,{children:"How to test?"}),"\n",(0,r.jsx)(n.li,{children:"Screenshots (if GUI changes)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wait for CI checks to pass:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All tests pass"}),"\n",(0,r.jsx)(n.li,{children:"No linting errors"}),"\n",(0,r.jsx)(n.li,{children:"No type errors (mypy)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Address review feedback"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Squash and merge"})," when approved"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"pr-checklist",children:"PR Checklist"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Tests added/updated"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","All tests pass"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Documentation updated (if needed)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","GUI changes verified in browser"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No console errors or warnings"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Eval baseline still passes (if changed retrieval)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Screenshots included (if visual changes)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"gui-development",children:"GUI Development"}),"\n",(0,r.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Framework"}),": Vanilla JavaScript (no build step)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State Management"}),": Browser localStorage + API calls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Styling"}),": Tailwind CSS (via CDN)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),": Playwright"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"adding-a-new-gui-feature",children:"Adding a New GUI Feature"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add HTML in gui/index.html:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<div id="my-feature-section" class="section hidden">\n  <h2>My Feature</h2>\n  <button id="my-feature-btn" class="btn btn-primary">Click Me</button>\n  <div id="my-feature-output"></div>\n</div>\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add JavaScript in gui/js/my_feature.js:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function initMyFeature() {\n  const btn = document.getElementById('my-feature-btn');\n  const output = document.getElementById('my-feature-output');\n\n  btn.addEventListener('click', async () => {\n    const response = await fetch('/api/my-feature');\n    const data = await response.json();\n    output.textContent = JSON.stringify(data, null, 2);\n  });\n}\n\n// Auto-initialize\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initMyFeature);\n} else {\n  initMyFeature();\n}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add backend endpoint in server/app.py:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.get("/api/my-feature")\ndef my_feature() -> Dict[str, Any]:\n    """My feature endpoint."""\n    return {"status": "success", "data": "Hello World"}\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add Playwright test in tests/gui/my_feature.spec.ts:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"test('my feature works', async ({ page }) => {\n  await page.goto('http://127.0.0.1:8012/');\n  await page.click('#my-feature-btn');\n  await expect(page.locator('#my-feature-output')).toContainText('Hello World');\n});\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Run test to verify:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx playwright test tests/gui/my_feature.spec.ts\n"})}),"\n",(0,r.jsx)(n.h2,{id:"backend-development",children:"Backend Development"}),"\n",(0,r.jsx)(n.h3,{id:"adding-a-new-endpoint",children:"Adding a New Endpoint"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Define Pydantic model (if needed):"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel\n\nclass MyRequest(BaseModel):\n    query: str\n    limit: int = 10\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add endpoint:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.post("/api/my-endpoint")\ndef my_endpoint(req: MyRequest) -> Dict[str, Any]:\n    """\n    My endpoint description.\n\n    Args:\n        req: Request with query and limit\n\n    Returns:\n        Results dictionary\n    """\n    results = do_something(req.query, req.limit)\n    return {"results": results}\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add test:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def test_my_endpoint():\n    from fastapi.testclient import TestClient\n    from server.app import app\n\n    client = TestClient(app)\n    response = client.post("/api/my-endpoint", json={\n        "query": "test",\n        "limit": 5\n    })\n\n    assert response.status_code == 200\n    assert "results" in response.json()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"common-development-tasks",children:"Common Development Tasks"}),"\n",(0,r.jsx)(n.h3,{id:"rebuild-index",children:"Rebuild Index"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Via GUI: Settings \u2192 Index \u2192 Rebuild\n# Via API:\ncurl -X POST http://127.0.0.1:8012/api/index/start \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{"repo": "agro", "force": true}\'\n'})}),"\n",(0,r.jsx)(n.h3,{id:"generate-semantic-cards",children:"Generate Semantic Cards"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Via GUI: Settings \u2192 Cards \u2192 Build\n# Via API:\ncurl -X POST http://127.0.0.1:8012/api/cards/build/start \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"repo\": \"agro\"}'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"train-reranker",children:"Train Reranker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Via GUI: Settings \u2192 Reranker \u2192 Train\n# Via CLI:\npython scripts/train_reranker.py --repo agro --epochs 3\n\n# Via API:\ncurl -X POST http://127.0.0.1:8012/api/reranker/train \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"epochs\": 3, \"batch_size\": 16}'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"clear-logs",children:"Clear Logs"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clear query logs\ncurl -X POST http://127.0.0.1:8012/api/reranker/logs/clear\n\n# Clear Docker logs\ndocker logs qdrant --tail 0\ndocker logs rag-redis --tail 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,r.jsx)(n.h3,{id:"enable-debug-logging",children:"Enable Debug Logging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# In .env\nLOG_LEVEL=DEBUG\n\n# Or runtime:\nexport LOG_LEVEL=DEBUG\nuvicorn server.app:app --reload --log-level debug\n"})}),"\n",(0,r.jsx)(n.h3,{id:"inspect-qdrant-collection",children:"Inspect Qdrant Collection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# List collections\ncurl http://127.0.0.1:6333/collections\n\n# Get collection info\ncurl http://127.0.0.1:6333/collections/code_chunks_agro\n\n# Search directly\ncurl -X POST http://127.0.0.1:6333/collections/code_chunks_agro/points/search \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"vector\": [0.1, 0.2, ...], \"limit\": 10}'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"inspect-redis-state",children:"Inspect Redis State"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Connect to Redis\ndocker exec -it rag-redis redis-cli\n\n# List keys\nKEYS *\n\n# Get value\nGET langgraph:checkpoints:dev\n"})}),"\n",(0,r.jsx)(n.h3,{id:"view-langsmith-traces",children:"View LangSmith Traces"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Get latest trace URL\ncurl http://127.0.0.1:8012/api/langsmith/latest\n"})}),"\n",(0,r.jsx)(n.h2,{id:"performance-profiling",children:"Performance Profiling"}),"\n",(0,r.jsx)(n.h3,{id:"profile-search-latency",children:"Profile Search Latency"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Via GUI: Metrics tab \u2192 Grafana \u2192 Search Latency dashboard\n# Via Prometheus:\ncurl http://127.0.0.1:9090/api/v1/query?query=agro_request_duration_seconds\n"})}),"\n",(0,r.jsx)(n.h3,{id:"profile-memory-usage",children:"Profile Memory Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Add to code\nimport tracemalloc\ntracemalloc.start()\n\n# Your code here\n\ncurrent, peak = tracemalloc.get_traced_memory()\nprint(f"Current: {current / 1024 / 1024:.2f} MB, Peak: {peak / 1024 / 1024:.2f} MB")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"release-process",children:"Release Process"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Feature complete on development"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Open PR: development \u2192 staging"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Run full test suite + manual QA on staging"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Tag staging release: v0.X.0-rc1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"After 1 week soak, open PR: staging \u2192 main"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Tag production release: v0.X.0"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Update changelog and GitHub release notes"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GitHub Issues"}),": Bug reports, feature requests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GitHub Discussions"}),": Questions, ideas, benchmarks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tag @DMontgomery40"})," for urgent issues"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,r.jsx)(n.p,{children:"AGRO is MIT licensed. By contributing, you agree to license your contributions under MIT."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Thank you for contributing to AGRO!"})," Every improvement helps developers code without rate limits."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);