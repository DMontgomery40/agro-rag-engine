"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[359],{8137:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"configuration/filtering","title":"Filtering & Exclusions","description":"AGRO\'s indexer automatically excludes noise files (tests, node_modules, build artifacts) to keep retrieval focused on production code. This is critical for retrieval quality - including tests can tank accuracy from 82% to 1.9%.","source":"@site/docs/configuration/filtering.md","sourceDirName":"configuration","slug":"/configuration/filtering","permalink":"/agro-rag-engine/configuration/filtering","draft":false,"unlisted":false,"editUrl":"https://github.com/DMontgomery40/agro-rag-engine/tree/main/website/docs/configuration/filtering.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Performance & Cost Analysis","permalink":"/agro-rag-engine/configuration/performance"},"next":{"title":"Alerting System","permalink":"/agro-rag-engine/configuration/alerting"}}');var r=s(4848),l=s(8453);const t={sidebar_position:3},c="Filtering & Exclusions",a={},d=[{value:"Why Filtering Matters",id:"why-filtering-matters",level:2},{value:"Filtering Architecture",id:"filtering-architecture",level:2},{value:"Built-in Directory Exclusions",id:"built-in-directory-exclusions",level:2},{value:"File Extension Exclusions",id:"file-extension-exclusions",level:2},{value:"Glob Pattern Exclusions",id:"glob-pattern-exclusions",level:2},{value:"Default Patterns",id:"default-patterns",level:3},{value:"How to Configure Filtering",id:"how-to-configure-filtering",level:2},{value:"Via GUI (Recommended)",id:"via-gui-recommended",level:3},{value:"Via File Editing",id:"via-file-editing",level:3},{value:"Language-Specific Presets",id:"language-specific-presets",level:2},{value:"Python",id:"python",level:3},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"Rust",id:"rust",level:3},{value:"Go",id:"go",level:3},{value:"Lockfile Strategy",id:"lockfile-strategy",level:2},{value:"Testing Exclusion Impact",id:"testing-exclusion-impact",level:2},{value:"Dry Run Mode",id:"dry-run-mode",level:3},{value:"Eval Before/After",id:"eval-beforeafter",level:3},{value:"Common Exclusion Patterns",id:"common-exclusion-patterns",level:2},{value:"Exclude Tests (Critical)",id:"exclude-tests-critical",level:3},{value:"Exclude Generated Files",id:"exclude-generated-files",level:3},{value:"Exclude Build Artifacts",id:"exclude-build-artifacts",level:3},{value:"Exclude Vendor/Dependencies",id:"exclude-vendordependencies",level:3},{value:"Exclude Documentation (Optional)",id:"exclude-documentation-optional",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"&quot;Index is too large&quot;",id:"index-is-too-large",level:3},{value:"&quot;Retrieval returns wrong files&quot;",id:"retrieval-returns-wrong-files",level:3},{value:"&quot;Important files are excluded&quot;",id:"important-files-are-excluded",level:3},{value:"&quot;Glob patterns not working&quot;",id:"glob-patterns-not-working",level:3},{value:"Performance Impact",id:"performance-impact",level:2},{value:"Index Size",id:"index-size",level:3},{value:"Retrieval Speed",id:"retrieval-speed",level:3},{value:"Accuracy",id:"accuracy",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Start Conservative",id:"1-start-conservative",level:3},{value:"2. Measure Impact",id:"2-measure-impact",level:3},{value:"3. Exclude Tests Aggressively",id:"3-exclude-tests-aggressively",level:3},{value:"4. Keep Lockfiles (Usually)",id:"4-keep-lockfiles-usually",level:3},{value:"5. Use Presets as Starting Point",id:"5-use-presets-as-starting-point",level:3},{value:"Advanced: Per-Repo Filters",id:"advanced-per-repo-filters",level:2},{value:"Migration Guide",id:"migration-guide",level:2},{value:"From No Filtering",id:"from-no-filtering",level:3},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"filtering--exclusions",children:"Filtering & Exclusions"})}),"\n",(0,r.jsxs)(n.p,{children:["AGRO's indexer automatically excludes noise files (tests, node_modules, build artifacts) to keep retrieval focused on production code. This is ",(0,r.jsx)(n.strong,{children:"critical for retrieval quality"})," - including tests can tank accuracy from 82% to 1.9%."]}),"\n",(0,r.jsx)(n.h2,{id:"why-filtering-matters",children:"Why Filtering Matters"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The Problem:"})," Without filtering, your index includes:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test files (",(0,r.jsx)(n.code,{children:".spec.ts"}),", ",(0,r.jsx)(n.code,{children:"test_*.py"}),") that use similar language to prod code"]}),"\n",(0,r.jsxs)(n.li,{children:["Build artifacts (",(0,r.jsx)(n.code,{children:"dist/"}),", ",(0,r.jsx)(n.code,{children:"build/"}),") that duplicate source code"]}),"\n",(0,r.jsxs)(n.li,{children:["Dependencies (",(0,r.jsx)(n.code,{children:"node_modules/"}),", ",(0,r.jsx)(n.code,{children:".venv/"}),") with irrelevant library code"]}),"\n",(0,r.jsxs)(n.li,{children:["Generated files (",(0,r.jsx)(n.code,{children:".d.ts"}),", ",(0,r.jsx)(n.code,{children:".min.js"}),") that pollute embeddings"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Impact on retrieval:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Index WITH tests:        Index WITHOUT tests:\nTop-1 accuracy: 1.9%     Top-1 accuracy: 82%\nTop-5 accuracy: 12%      Top-5 accuracy: 95%\nMRR: 0.14                MRR: 0.88\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Real example:"}),' Query "How does authentication work?" returned ',(0,r.jsx)(n.code,{children:"auth.test.js"})," (mock auth) instead of ",(0,r.jsx)(n.code,{children:"auth.js"})," (real implementation)."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"filtering-architecture",children:"Filtering Architecture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Source Directory                       \u2502\n\u2502  - 10,000 files                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Step 1: Directory Pruning              \u2502\n\u2502  - Skip .git, node_modules, .venv, etc. \u2502\n\u2502  - Defined in common/filtering.py       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502 \u2192 5,000 files\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Step 2: File Extension Filter          \u2502\n\u2502  - Skip binaries, images, backups       \u2502\n\u2502  - Defined in common/filtering.py       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502 \u2192 3,000 files\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Step 3: Glob Pattern Exclusions        \u2502\n\u2502  - data/exclude_globs.txt patterns      \u2502\n\u2502  - Tests, generated files, etc.         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502 \u2192 1,200 files (production code only)\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Indexed Chunks                         \u2502\n\u2502  - AST-aware chunking                   \u2502\n\u2502  - Embeddings + BM25 index              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"built-in-directory-exclusions",children:"Built-in Directory Exclusions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Hard-coded in ",(0,r.jsx)(n.code,{children:"common/filtering.py"}),":"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'PRUNE_DIRS = {\n    ".git", ".github", ".gitlab",     # Version control\n    ".venv", "venv", "env",           # Python virtualenvs\n    "node_modules",                   # Node.js dependencies\n    "dist", "build", "target",        # Build outputs\n    "__pycache__", ".pytest_cache",   # Python caches\n    "coverage", ".tox", ".mypy_cache", # Testing/linting\n    ".idea", ".vscode"                # IDE metadata\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why hard-coded?"})," These directories are universally noise - no scenario where you'd want them indexed."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"To modify:"})," Edit ",(0,r.jsx)(n.code,{children:"common/filtering.py"})," and rebuild index."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"file-extension-exclusions",children:"File Extension Exclusions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Defined in ",(0,r.jsx)(n.code,{children:"common/filtering.py"}),":"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def _should_index_file(name: str) -> bool:\n    # ALWAYS index important .txt files\n    if name in ("requirements.txt", "requirements-rag.txt", "exclude_globs.txt"):\n        return True\n\n    # EXCLUDE markdown and generic text (per user requirement)\n    if name.endswith((".md", ".markdown", ".rst", ".txt")):\n        return False\n\n    # Skip binaries, images, backups\n    skip_suffixes = (\n        ".min.js", ".png", ".jpg", ".jpeg", ".gif", ".webp",\n        ".pdf", ".zip", ".tar", ".gz", ".bak", ".backup"\n    )\n    if any(name.endswith(s) for s in skip_suffixes):\n        return False\n\n    # Skip lock files and caches\n    if "lock" in name or ".cache" in name or "backup" in name:\n        return False\n\n    return True\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Exception handling:"})," Critical files like ",(0,r.jsx)(n.code,{children:"requirements.txt"})," are always indexed even if they match exclusion patterns."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"glob-pattern-exclusions",children:"Glob Pattern Exclusions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File:"})," ",(0,r.jsx)(n.code,{children:"data/exclude_globs.txt"})]}),"\n",(0,r.jsxs)(n.p,{children:["This is the ",(0,r.jsx)(n.strong,{children:"most powerful filtering layer"})," - supports full glob syntax for complex patterns."]}),"\n",(0,r.jsx)(n.h3,{id:"default-patterns",children:"Default Patterns"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Backup files\n**/*.bak\n**/*.bak[0-9]\n**/*.backup\n**/*.backup-*\n\n# Build artifacts / vendor / caches\n**/node_modules/**\n**/vendor/**\n**/dist/**\n**/build/**\n**/.venv/**\n**/venv/**\n**/.next/**\n**/.turbo/**\n**/__pycache__/**\n**/.pytest_cache/**\n\n# IDE / Editor data (CRITICAL)\n**/.editor_data/**\n**/.code-server/**\n**/.vscode-server/**\n**/.openvscode-server/**\n\n# Minified or generated\n**/*.min.js\n**/*.min.css\n**/*.map\n**/*.bundle.js\n**/*.generated.*\n\n# Test files (CRITICAL for accuracy)\n**/test/**\n**/tests/**\n**/*.spec.ts\n**/*.test.ts\n**/*.spec.js\n**/*.test.js\n**/fixtures/**\n**/mocks/**\n**/__mocks__/**\n**/playwright*.ts\n\n# Generated/vendor code\n**/*.d.ts\n**/external/**\n**/third_party/**\n**/migrations/**\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Full file:"})," ",(0,r.jsx)(n.code,{children:"/Users/davidmontgomery/agro-rag-engine/data/exclude_globs.txt"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"how-to-configure-filtering",children:"How to Configure Filtering"}),"\n",(0,r.jsx)(n.h3,{id:"via-gui-recommended",children:"Via GUI (Recommended)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Settings tab \u2192 Filters subtab"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Edit exclusion patterns"})," (live preview of matched files)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'Click "Save & Reindex"'})," (rebuilds index with new patterns)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"GUI Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Syntax highlighting for glob patterns"}),"\n",(0,r.jsx)(n.li,{children:"Live validation (shows which files will be excluded)"}),"\n",(0,r.jsx)(n.li,{children:"Preset templates (Python, JavaScript, Rust, Go)"}),"\n",(0,r.jsx)(n.li,{children:"Dry-run mode (see what would be excluded without reindexing)"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"via-file-editing",children:"Via File Editing"}),"\n",(0,r.jsxs)(n.p,{children:["Edit ",(0,r.jsx)(n.code,{children:"data/exclude_globs.txt"})," directly:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Custom exclusions for your project\n**/legacy/**           # Old code\n**/archived/**         # Archived files\n**/temp/**             # Temporary files\n**/scratch/**          # Scratch work\n**/.DS_Store           # macOS metadata\n**/Thumbs.db           # Windows metadata\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Glob syntax:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"*"})," - Matches any characters (not /)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"**"})," - Matches any number of directories"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?"})," - Matches single character"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[abc]"})," - Matches one character in set"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[!abc]"})," - Matches one character NOT in set"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example patterns:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Exclude all JavaScript test files\n**/*.test.js\n**/*.spec.js\n\n# Exclude specific directories\n**/legacy/**\n**/archive/**\n\n# Exclude files with 'backup' anywhere in name\n**/*backup*\n\n# Exclude numbered backups\n**/*.bak[0-9]\n"})}),"\n",(0,r.jsx)(n.p,{children:"After editing, reindex:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"REPO=agro python indexer/index_repo.py\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"language-specific-presets",children:"Language-Specific Presets"}),"\n",(0,r.jsx)(n.p,{children:"AGRO includes preset filter templates for common stacks:"}),"\n",(0,r.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Python-specific exclusions\n**/__pycache__/**\n**/*.pyc\n**/.pytest_cache/**\n**/.mypy_cache/**\n**/.tox/**\n**/venv/**\n**/.venv/**\n**/*.egg-info/**\n**/dist/**\n**/build/**\n"})}),"\n",(0,r.jsx)(n.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# JS/TS-specific exclusions\n**/node_modules/**\n**/dist/**\n**/build/**\n**/.next/**\n**/.turbo/**\n**/.svelte-kit/**\n**/*.min.js\n**/*.bundle.js\n**/*.d.ts\n**/coverage/**\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rust",children:"Rust"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Rust-specific exclusions\n**/target/**\n**/Cargo.lock  # Optional - can be helpful for dependency context\n**/*.rlib\n**/*.rmeta\n"})}),"\n",(0,r.jsx)(n.h3,{id:"go",children:"Go"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Go-specific exclusions\n**/vendor/**\n**/*.test\n**/testdata/**\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Apply preset:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Via GUI: Settings \u2192 Filters \u2192 Load Preset \u2192 Python\n# Or copy preset to exclude_globs.txt\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"lockfile-strategy",children:"Lockfile Strategy"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Default: Include lockfiles"})," (disabled exclusions in ",(0,r.jsx)(n.code,{children:"exclude_globs.txt"}),")"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Lockfiles - DISABLED for SOTA RAG (can be helpful for dependency context)\n# **/pnpm-lock.yaml\n# **/package-lock.json\n# **/yarn.lock\n# **/poetry.lock\n# **/Pipfile.lock\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Rationale:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lockfiles contain dependency versions (useful for debugging version conflicts)"}),"\n",(0,r.jsx)(n.li,{children:"Small file size impact (~1-2% of index)"}),"\n",(0,r.jsx)(n.li,{children:'Can help answer "What version of X are we using?"'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"To exclude lockfiles:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Uncomment these lines in exclude_globs.txt\n**/pnpm-lock.yaml\n**/package-lock.json\n**/yarn.lock\n**/poetry.lock\n**/Pipfile.lock\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"testing-exclusion-impact",children:"Testing Exclusion Impact"}),"\n",(0,r.jsx)(n.h3,{id:"dry-run-mode",children:"Dry Run Mode"}),"\n",(0,r.jsx)(n.p,{children:"Preview what files would be excluded without reindexing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Via GUI: Settings \u2192 Filters \u2192 Dry Run\n# Shows list of files that match exclusion patterns\n"})}),"\n",(0,r.jsx)(n.h3,{id:"eval-beforeafter",children:"Eval Before/After"}),"\n",(0,r.jsx)(n.p,{children:"Compare retrieval quality before and after changing filters:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Run baseline eval\nREPO=agro python -m eval.eval_loop --baseline\n\n# 2. Change filters (e.g., add test exclusions)\necho '**/test/**' >> data/exclude_globs.txt\n\n# 3. Reindex\nREPO=agro python indexer/index_repo.py\n\n# 4. Run eval again\nREPO=agro python -m eval.eval_loop --compare\n\n# Output:\n# Baseline MRR: 0.72\n# Current MRR: 0.88  (+0.16)\n# Top-1 accuracy: 82% (was 1.9%)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Golden question accuracy tracks filtering effectiveness."})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"common-exclusion-patterns",children:"Common Exclusion Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"exclude-tests-critical",children:"Exclude Tests (Critical)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Comprehensive test exclusions\n**/test/**\n**/tests/**\n**/__tests__/**\n**/*.test.ts\n**/*.test.js\n**/*.spec.ts\n**/*.spec.js\n**/*.test.py\n**/test_*.py\n**/fixtures/**\n**/mocks/**\n**/__mocks__/**\n**/playwright*.ts\n**/cypress/**\n**/*.e2e.ts\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exclude-generated-files",children:"Exclude Generated Files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# TypeScript declarations\n**/*.d.ts\n\n# Minified JS/CSS\n**/*.min.js\n**/*.min.css\n**/*.bundle.js\n**/*.chunk.js\n\n# Source maps\n**/*.map\n\n# Proto-generated code\n**/*.pb.go\n**/*_pb2.py\n**/*_pb2_grpc.py\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exclude-build-artifacts",children:"Exclude Build Artifacts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Build directories\n**/dist/**\n**/build/**\n**/out/**\n**/target/**\n**/.next/**\n**/.turbo/**\n**/.svelte-kit/**\n**/public/build/**\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exclude-vendordependencies",children:"Exclude Vendor/Dependencies"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Package managers\n**/node_modules/**\n**/vendor/**\n**/Pods/**\n**/Godeps/**\n**/.bundle/**\n\n# Python\n**/site-packages/**\n**/.venv/**\n**/venv/**\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exclude-documentation-optional",children:"Exclude Documentation (Optional)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# If you want retrieval to focus on code only\n**/*.md\n**/*.markdown\n**/*.rst\n**/docs/**\n**/documentation/**\n**/wiki/**\n\n# Exception: Keep critical docs\n!README.md\n!CONTRIBUTING.md\n!CHANGELOG.md\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," AGRO's default is to exclude ",(0,r.jsx)(n.code,{children:".md"})," files per built-in filtering, but you can override by allowing specific patterns."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"index-is-too-large",children:'"Index is too large"'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Symptom:"})," Index size > 1GB, slow retrieval"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cause:"})," Not excluding vendor code, build artifacts, or tests"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check what's being indexed\nls -lh data/agro/chunks.jsonl  # Should be < 100MB for typical repo\n\n# Add aggressive exclusions\ncat >> data/exclude_globs.txt <<EOF\n**/node_modules/**\n**/dist/**\n**/build/**\n**/test/**\n**/tests/**\nEOF\n\n# Reindex\nREPO=agro python indexer/index_repo.py\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"retrieval-returns-wrong-files",children:'"Retrieval returns wrong files"'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Symptom:"})," Search returns test files or mocks instead of prod code"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cause:"})," Tests not excluded, or insufficient test exclusions"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Add comprehensive test exclusions\ncat >> data/exclude_globs.txt <<EOF\n**/test/**\n**/tests/**\n**/*.test.*\n**/*.spec.*\n**/fixtures/**\n**/mocks/**\n**/__mocks__/**\nEOF\n\n# Reindex and eval\nREPO=agro python indexer/index_repo.py\nREPO=agro python -m eval.eval_loop\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Expected improvement:"})," Top-1 accuracy should jump from ~2% to ~80%+"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"important-files-are-excluded",children:'"Important files are excluded"'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Symptom:"})," Can't find files you know exist"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cause:"})," Overly aggressive exclusion patterns"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Check dry run:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# GUI: Settings \u2192 Filters \u2192 Dry Run\n# Shows excluded files - look for false positives\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use negation patterns:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Exclude all markdown EXCEPT README\n**/*.md\n!README.md\n!CONTRIBUTING.md\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Override built-in filters:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Edit common/filtering.py\n# Add exception to _should_index_file()\nif name == "important_file.txt":\n    return True\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"glob-patterns-not-working",children:'"Glob patterns not working"'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common mistakes:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# \u274c Wrong: Missing ** for recursive\ntest/**          # Only matches /test/, not /src/test/\n\n# \u2705 Correct: Use **/ for recursive\n**/test/**       # Matches test/ anywhere in tree\n\n# \u274c Wrong: Using / at start (won't match)\n/test/**         # Only matches /test/ at repo root\n\n# \u2705 Correct: Use **/ for anywhere\n**/test/**       # Matches at any depth\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Test patterns:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install globmatch tool\npip install globmatch\n\n# Test pattern\nglobmatch '**/*.test.js' src/components/Button.test.js\n# Output: True\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"performance-impact",children:"Performance Impact"}),"\n",(0,r.jsx)(n.h3,{id:"index-size",children:"Index Size"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Repo: agro (Python, ~500 files)\n\nWith tests + node_modules:\n- Files indexed: 15,420\n- Chunks: 89,342\n- BM25 index: 342 MB\n- Qdrant collection: 1.2 GB\n\nWithout tests/node_modules:\n- Files indexed: 287\n- Chunks: 3,420\n- BM25 index: 12 MB\n- Qdrant collection: 42 MB\n\nReduction: 96% files, 96% chunks, 96% storage\n"})}),"\n",(0,r.jsx)(n.h3,{id:"retrieval-speed",children:"Retrieval Speed"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"With tests (89k chunks):\n- BM25 search: ~800ms\n- Qdrant search: ~600ms\n- Reranking: ~1.2s\nTotal: ~2.6s\n\nWithout tests (3.4k chunks):\n- BM25 search: ~30ms\n- Qdrant search: ~50ms\n- Reranking: ~200ms\nTotal: ~280ms\n\nSpeed-up: 9.3x faster\n"})}),"\n",(0,r.jsx)(n.h3,{id:"accuracy",children:"Accuracy"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Golden questions: 25 queries\n\nWith tests:\n- Top-1: 1.9%\n- Top-5: 12.0%\n- MRR: 0.14\n\nWithout tests:\n- Top-1: 82.0%\n- Top-5: 95.2%\n- MRR: 0.88\n\nImprovement: 43x better Top-1, 6.3x better MRR\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-start-conservative",children:"1. Start Conservative"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Minimal exclusions (safest)\n**/node_modules/**\n**/.venv/**\n**/dist/**\n**/build/**\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run eval to get baseline, then add exclusions incrementally."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"2-measure-impact",children:"2. Measure Impact"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Before changing filters\nREPO=agro python -m eval.eval_loop --baseline\n\n# After each change\nREPO=agro python -m eval.eval_loop --compare\n"})}),"\n",(0,r.jsx)(n.p,{children:"Only keep exclusions that improve MRR or accuracy."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"3-exclude-tests-aggressively",children:"3. Exclude Tests Aggressively"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Critical for retrieval quality."})," Tests use similar language to prod code but represent mocks, not real implementations."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Comprehensive test exclusions\n**/test/**\n**/tests/**\n**/__tests__/**\n**/*.test.*\n**/*.spec.*\n**/fixtures/**\n**/mocks/**\n**/__mocks__/**\n**/e2e/**\n**/integration/**\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"4-keep-lockfiles-usually",children:"4. Keep Lockfiles (Usually)"}),"\n",(0,r.jsx)(n.p,{children:"Unless you have a huge monorepo, lockfiles are small and can help answer dependency questions."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exclude only if:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Repo has 10k+ files"}),"\n",(0,r.jsx)(n.li,{children:"Storage is constrained"}),"\n",(0,r.jsx)(n.li,{children:"You never query about dependencies"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"5-use-presets-as-starting-point",children:"5. Use Presets as Starting Point"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Load preset (via GUI or copy manually)\ncp presets/python.exclude.txt data/exclude_globs.txt\n\n# Customize for your repo\nvim data/exclude_globs.txt\n\n# Test\nREPO=agro python indexer/index_repo.py\nREPO=agro python -m eval.eval_loop\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"advanced-per-repo-filters",children:"Advanced: Per-Repo Filters"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File:"})," ",(0,r.jsx)(n.code,{children:"repos.json"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "agro": {\n    "path": "/path/to/agro",\n    "exclude_patterns": [\n      "**/legacy/**",\n      "**/deprecated/**"\n    ]\n  },\n  "client-app": {\n    "path": "/path/to/client-app",\n    "exclude_patterns": [\n      "**/node_modules/**",\n      "**/dist/**",\n      "**/*.test.ts"\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Priority:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Per-repo ",(0,r.jsx)(n.code,{children:"exclude_patterns"})," (highest)"]}),"\n",(0,r.jsxs)(n.li,{children:["Global ",(0,r.jsx)(n.code,{children:"data/exclude_globs.txt"})]}),"\n",(0,r.jsxs)(n.li,{children:["Built-in ",(0,r.jsx)(n.code,{children:"PRUNE_DIRS"})," (lowest)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,r.jsx)(n.h3,{id:"from-no-filtering",children:"From No Filtering"}),"\n",(0,r.jsx)(n.p,{children:"If you previously indexed without filters:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Backup old index\ncp -r data/agro data/agro.backup\n\n# 2. Add exclusions\ncat > data/exclude_globs.txt <<EOF\n**/test/**\n**/tests/**\n**/*.test.*\n**/*.spec.*\n**/node_modules/**\n**/dist/**\n**/build/**\nEOF\n\n# 3. Reindex\nREPO=agro python indexer/index_repo.py\n\n# 4. Compare eval results\nREPO=agro python -m eval.eval_loop\n# Expected: Massive accuracy improvement\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/agro-rag-engine/configuration/performance",children:"Performance Tuning"})})," - Optimize retrieval speed and quality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/agro-rag-engine/features/learning-reranker",children:"Learning Reranker"})})," - Improve search quality with feedback"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/agro-rag-engine/operations/troubleshooting",children:"Troubleshooting"})})," - Debug retrieval issues"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);