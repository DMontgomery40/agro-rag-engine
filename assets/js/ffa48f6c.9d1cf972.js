"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[479],{6075:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"api/mcp-tools","title":"MCP Tools","description":"AGRO exposes a Model Context Protocol (MCP) server that AI agents like Claude Code and Codex can use to query your codebase. Instead of reading entire files (burning tokens), agents call RAG tools that return only the relevant chunks with citations.","source":"@site/docs/api/mcp-tools.md","sourceDirName":"api","slug":"/api/mcp-tools","permalink":"/agro-rag-engine/api/mcp-tools","draft":false,"unlisted":false,"editUrl":"https://github.com/DMontgomery40/agro-rag-engine/tree/main/website/docs/api/mcp-tools.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"HTTP Endpoints","permalink":"/agro-rag-engine/api/endpoints"},"next":{"title":"Model Configuration","permalink":"/agro-rag-engine/configuration/models"}}');var i=r(4848),l=r(8453);const t={sidebar_position:3},a="MCP Tools",d={},o=[{value:"Why MCP?",id:"why-mcp",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Transport Modes",id:"transport-modes",level:2},{value:"STDIO (Local Agents)",id:"stdio-local-agents",level:3},{value:"HTTP (Remote Agents)",id:"http-remote-agents",level:3},{value:"SSE (Streaming)",id:"sse-streaming",level:3},{value:"WebSocket (Bidirectional)",id:"websocket-bidirectional",level:3},{value:"Available Tools",id:"available-tools",level:2},{value:"rag_answer",id:"rag_answer",level:3},{value:"rag_search",id:"rag_search",level:3},{value:"rag_feedback",id:"rag_feedback",level:3},{value:"netlify_deploy",id:"netlify_deploy",level:3},{value:"web_get",id:"web_get",level:3},{value:"Installation",id:"installation",level:2},{value:"Claude Code Setup",id:"claude-code-setup",level:3},{value:"Codex CLI Setup",id:"codex-cli-setup",level:3},{value:"Per-Transport Configuration",id:"per-transport-configuration",level:2},{value:"Agent Rules for Claude Code/Codex",id:"agent-rules-for-claude-codecodex",level:2},{value:"1. Always Call RAG First",id:"1-always-call-rag-first",level:3},{value:"2. Never Hallucinate Paths",id:"2-never-hallucinate-paths",level:3},{value:"3. Respect Repository Boundaries",id:"3-respect-repository-boundaries",level:3},{value:"4. Use Citations",id:"4-use-citations",level:3},{value:"5. Submit Feedback",id:"5-submit-feedback",level:3},{value:"Testing &amp; Debugging",id:"testing--debugging",level:2},{value:"Test MCP Server Directly",id:"test-mcp-server-directly",level:3},{value:"Debug MCP in Claude Code",id:"debug-mcp-in-claude-code",level:3},{value:"Performance &amp; Cost",id:"performance--cost",level:2},{value:"Token Comparison",id:"token-comparison",level:3},{value:"Latency",id:"latency",level:3},{value:"Cost Breakdown (API Models)",id:"cost-breakdown-api-models",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"&quot;MCP server not responding&quot;",id:"mcp-server-not-responding",level:3},{value:"&quot;Tools not appearing in Claude Code&quot;",id:"tools-not-appearing-in-claude-code",level:3},{value:"&quot;Invalid repo error&quot;",id:"invalid-repo-error",level:3},{value:"&quot;Graph not initialized&quot;",id:"graph-not-initialized",level:3},{value:"HTTP Transport Details",id:"http-transport-details",level:2},{value:"Start HTTP MCP Server",id:"start-http-mcp-server",level:3},{value:"Check Status",id:"check-status",level:3},{value:"Stop HTTP Server",id:"stop-http-server",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"STDIO Transport",id:"stdio-transport",level:3},{value:"HTTP Transport",id:"http-transport",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mcp-tools",children:"MCP Tools"})}),"\n",(0,i.jsxs)(n.p,{children:["AGRO exposes a ",(0,i.jsx)(n.strong,{children:"Model Context Protocol (MCP)"})," server that AI agents like Claude Code and Codex can use to query your codebase. Instead of reading entire files (burning tokens), agents call RAG tools that return only the relevant chunks with citations."]}),"\n",(0,i.jsx)(n.h2,{id:"why-mcp",children:"Why MCP?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"The Problem:"})," Claude Code reads full files to answer questions. For complex queries, this can mean:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Reading 10-15 files"}),"\n",(0,i.jsx)(n.li,{children:"Sending 20,000+ tokens per query"}),"\n",(0,i.jsx)(n.li,{children:"Hitting rate limits fast (Claude Pro: 1.27M tokens/week = ~60 complex queries)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"The Solution:"})," MCP tools let Claude call ",(0,i.jsx)(n.code,{children:"rag_answer(repo, question)"})," instead:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Returns only relevant chunks (5-10)"}),"\n",(0,i.jsx)(n.li,{children:"Sends ~1,141 tokens total (91% reduction)"}),"\n",(0,i.jsx)(n.li,{children:"Same answer quality, 11x more queries per week"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Claude Code / Codex                   \u2502\n\u2502  - MCP client built-in                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502 MCP protocol (JSON-RPC)\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  AGRO MCP Server                       \u2502\n\u2502  - STDIO transport (local)             \u2502\n\u2502  - HTTP transport (remote)             \u2502\n\u2502  - SSE transport (streaming)           \u2502\n\u2502  - WebSocket transport (bidirectional) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502 calls\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  AGRO RAG Engine                       \u2502\n\u2502  - Hybrid search                       \u2502\n\u2502  - LangGraph pipeline                  \u2502\n\u2502  - Cross-encoder reranking             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,i.jsx)(n.h2,{id:"transport-modes",children:"Transport Modes"}),"\n",(0,i.jsxs)(n.p,{children:["AGRO supports ",(0,i.jsx)(n.strong,{children:"four MCP transports"})," with different capabilities:"]}),"\n",(0,i.jsx)(n.h3,{id:"stdio-local-agents",children:"STDIO (Local Agents)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Best for:"})," Claude Code, Codex CLI, local development"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Tools available:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rag_answer"})," - Full LangGraph pipeline with citations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rag_search"})," - Retrieval-only (debugging)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rag_feedback"})," - Submit ratings to train reranker"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"netlify_deploy"})," - Trigger Netlify builds"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"web_get"})," - HTTP GET for allowlisted domains"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Setup:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start MCP server\nbash scripts/up.sh  # Starts infra + MCP\n\n# Register with Claude Code or Codex\n# (see Installation section below)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "agro": {\n      "command": "/path/to/agro/.venv/bin/python",\n      "args": ["/path/to/agro/server/mcp/server.py"],\n      "env": {\n        "REPO": "agro",\n        "EMBEDDING_TYPE": "local",\n        "GEN_MODEL": "qwen3-coder:30b"\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"http-remote-agents",children:"HTTP (Remote Agents)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Best for:"})," Web platforms, remote agents, API integrations"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Tools available:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rag_answer"})," - Full pipeline (same as STDIO)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rag_search"})," - Retrieval-only"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Endpoint:"})," ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8013"})," (default)"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Start server:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Via GUI: Infrastructure tab \u2192 MCP HTTP Server \u2192 Start\n# Or via API:\ncurl -X POST http://127.0.0.1:8012/api/mcp/http/start \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"port\": 8013}'\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example request:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://127.0.0.1:8013/tools/call \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "method": "tools/call",\n    "params": {\n      "name": "rag_answer",\n      "arguments": {\n        "repo": "agro",\n        "question": "How does hybrid search work?"\n      }\n    }\n  }\'\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"sse-streaming",children:"SSE (Streaming)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Best for:"})," Real-time updates, streaming answers"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," Planned (not yet implemented)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use case:"})," Stream LLM generation token-by-token to the client for real-time feedback."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"websocket-bidirectional",children:"WebSocket (Bidirectional)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Best for:"})," Interactive sessions, bidirectional communication"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," Planned (not yet implemented)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use case:"})," Persistent connections for chat-like interfaces with state management."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"available-tools",children:"Available Tools"}),"\n",(0,i.jsx)(n.h3,{id:"rag_answer",children:"rag_answer"}),"\n",(0,i.jsx)(n.p,{children:"Generate a full answer using the LangGraph pipeline (retrieval + generation + citations)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Input Schema:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "repo": "string (required)",\n  "question": "string (required)"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# From Claude Code\nresult = rag_answer(\n    repo="agro",\n    question="How does the reranker training pipeline work?"\n)\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "answer": "The reranker training pipeline consists of four stages:\\n\\n1. **Triplet Mining**: Extracts (query, positive, negative) triplets from query logs and golden questions using `server/reranker/miner.py`...",\n  "citations": [\n    "server/reranker/trainer.py:45-120",\n    "server/reranker/miner.py:89-156",\n    "eval/eval_loop.py:203-245"\n  ],\n  "repo": "agro",\n  "confidence": 0.87,\n  "event_id": "evt_1737234567890"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Fields:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"answer"})," (string): Synthesized answer from the LLM"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"citations"})," (array): File paths with line ranges (5-10 chunks)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"repo"})," (string): Repository name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"confidence"})," (float): Retrieval confidence (0.0-1.0)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"event_id"})," (string): Use with ",(0,i.jsx)(n.code,{children:"rag_feedback"})," to rate quality"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"rag_search",children:"rag_search"}),"\n",(0,i.jsx)(n.p,{children:"Retrieval-only search (no LLM generation). Returns raw chunks with metadata."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Input Schema:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "repo": "string (required)",\n  "question": "string (required)",\n  "top_k": "integer (optional, default: 10)"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'result = rag_search(\n    repo="agro",\n    question="hybrid search implementation",\n    top_k=5\n)\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "results": [\n    {\n      "file_path": "retrieval/hybrid_search.py",\n      "start_line": 389,\n      "end_line": 632,\n      "language": "python",\n      "rerank_score": 0.91,\n      "repo": "agro"\n    },\n    {\n      "file_path": "server/app.py",\n      "start_line": 245,\n      "end_line": 289,\n      "language": "python",\n      "rerank_score": 0.78,\n      "repo": "agro"\n    }\n  ],\n  "repo": "agro",\n  "count": 5\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use case:"})," Debugging retrieval quality, testing reranker performance, building custom UIs."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"rag_feedback",children:"rag_feedback"}),"\n",(0,i.jsx)(n.p,{children:"Submit feedback ratings (1-5 stars) for a previous query to train the learning reranker."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Input Schema:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "event_id": "string (required)",\n  "rating": "integer (required, 1-5)",\n  "note": "string (optional)"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# After calling rag_answer and getting event_id\nresult = rag_feedback(\n    event_id="evt_1737234567890",\n    rating=5,\n    note="Perfect answer, exactly what I needed"\n)\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Feedback submitted: 5/5 stars"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Impact:"})," Feedback is logged and used to:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Mine triplets for reranker training"}),"\n",(0,i.jsx)(n.li,{children:"Track query quality metrics"}),"\n",(0,i.jsx)(n.li,{children:"Identify edge cases for golden test expansion"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"netlify_deploy",children:"netlify_deploy"}),"\n",(0,i.jsxs)(n.p,{children:["Trigger a Netlify build for your static sites (requires ",(0,i.jsx)(n.code,{children:"NETLIFY_API_KEY"}),")."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Input Schema:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:"{\n  \"domain\": \"string (enum: 'project.net', 'project.dev', 'both')\"\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'result = netlify_deploy(domain="both")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "results": [\n    {\n      "domain": "project.net",\n      "status": "triggered",\n      "site_id": "abc123...",\n      "build_id": "def456..."\n    },\n    {\n      "domain": "project.dev",\n      "status": "triggered",\n      "site_id": "xyz789...",\n      "build_id": "uvw012..."\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Setup:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export NETLIFY_API_KEY=your-api-key\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"web_get",children:"web_get"}),"\n",(0,i.jsx)(n.p,{children:"HTTP GET for allowlisted domains (OpenAI, GitHub, etc.)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Input Schema:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "url": "string (required)",\n  "max_bytes": "integer (optional, default: 20000)"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Allowlisted hosts:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"openai.com"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"platform.openai.com"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"github.com"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"openai.github.io"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'result = web_get(\n    url="https://platform.openai.com/docs/api-reference",\n    max_bytes=10000\n)\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "url": "https://platform.openai.com/docs/api-reference",\n  "status": 200,\n  "length": 12345,\n  "clipped": true,\n  "content_preview": "<!DOCTYPE html>..."\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.h3,{id:"claude-code-setup",children:"Claude Code Setup"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Start AGRO infrastructure:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd /path/to/agro-rag-engine\nmake up  # Starts Qdrant, Redis, Prometheus, Grafana, MCP\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Find your Python path:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"which python  # If using virtualenv: /path/to/agro/.venv/bin/python\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Configure Claude Code:"})}),"\n",(0,i.jsxs)(n.p,{children:["Edit ",(0,i.jsx)(n.code,{children:"~/.config/claude/mcp.json"})," (macOS/Linux) or ",(0,i.jsx)(n.code,{children:"%APPDATA%\\Claude\\mcp.json"})," (Windows):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "agro": {\n      "command": "/path/to/agro/.venv/bin/python",\n      "args": ["/path/to/agro/server/mcp/server.py"],\n      "env": {\n        "REPO": "agro",\n        "EMBEDDING_TYPE": "local",\n        "GEN_MODEL": "qwen3-coder:30b",\n        "RERANK_BACKEND": "local"\n      }\n    }\n  }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Restart Claude Code"})," and verify tools appear in the MCP section."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"codex-cli-setup",children:"Codex CLI Setup"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Install Codex:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"brew install openai/tap/codex\n# or\nnpm install -g @openai/codex\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Register MCP server:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"codex mcp add agro -- \\\n  /path/to/agro/.venv/bin/python \\\n  /path/to/agro/server/mcp/server.py\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Verify registration:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"codex mcp list\n# Should show: agro\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Test in Codex:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'codex chat\n# In chat: "Use rag_answer to find where hybrid search is implemented in agro"\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"per-transport-configuration",children:"Per-Transport Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["AGRO lets you configure ",(0,i.jsx)(n.strong,{children:"different models for different transports"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# STDIO (local agents) - Use free local models\nstdio:\n  gen_model: qwen3-coder:30b  # Ollama\n  embedding: local            # Sentence Transformers\n  rerank: local               # Cross-encoder\n\n# HTTP (remote agents) - Use fast API models\nhttp:\n  gen_model: gpt-4o-mini      # OpenAI\n  embedding: text-embedding-3-small\n  rerank: cohere              # Cohere rerank-3.5\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Configure via GUI:"})," Infrastructure tab \u2192 MCP Configuration \u2192 Select Transport \u2192 Set Models"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Why?"})," Local agents (STDIO) can use powerful local models with zero API cost. Remote agents (HTTP) need fast responses, so use cheap API models."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"agent-rules-for-claude-codecodex",children:"Agent Rules for Claude Code/Codex"}),"\n",(0,i.jsxs)(n.p,{children:["To maximize effectiveness, configure your agent with these rules (add to ",(0,i.jsx)(n.code,{children:"~/.config/claude/rules.md"})," or Codex settings):"]}),"\n",(0,i.jsx)(n.h3,{id:"1-always-call-rag-first",children:"1. Always Call RAG First"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"Before reading any file, ALWAYS call `rag_answer` or `rag_search` first.\nRAG results are authoritative - trust file paths and line numbers.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-never-hallucinate-paths",children:"2. Never Hallucinate Paths"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"NEVER assume a file exists without RAG confirmation.\nIf RAG returns no results, tell the user honestly - don't guess.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-respect-repository-boundaries",children:"3. Respect Repository Boundaries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"Repositories are isolated. Never mix code from different repos.\nAlways specify repo parameter in MCP calls.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-use-citations",children:"4. Use Citations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:'When answering from RAG results, cite file paths and line ranges:\n"Based on retrieval/hybrid_search.py:389-632, the search pipeline..."\n'})}),"\n",(0,i.jsx)(n.h3,{id:"5-submit-feedback",children:"5. Submit Feedback"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"After getting a good answer from rag_answer, submit feedback:\nrag_feedback(event_id=<event_id>, rating=5)\nThis trains the reranker to improve future searches.\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"testing--debugging",children:"Testing & Debugging"}),"\n",(0,i.jsx)(n.h3,{id:"test-mcp-server-directly",children:"Test MCP Server Directly"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd /path/to/agro-rag-engine\n. .venv/bin/activate\n\n# Test tools/list\npython -c \"\nimport json\nfrom server.mcp.server import MCPServer\nreq = {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}\nserver = MCPServer()\nprint(json.dumps(server.handle_request(req), indent=2))\n\"\n\n# Test rag_answer\npython -c \"\nimport json\nfrom server.mcp.server import MCPServer\nreq = {\n  'jsonrpc': '2.0',\n  'id': 2,\n  'method': 'tools/call',\n  'params': {\n    'name': 'rag_answer',\n    'arguments': {'repo': 'agro', 'question': 'How does hybrid search work?'}\n  }\n}\nserver = MCPServer()\nprint(json.dumps(server.handle_request(req), indent=2))\n\"\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"debug-mcp-in-claude-code",children:"Debug MCP in Claude Code"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Check MCP configuration:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cat ~/.config/claude/mcp.json\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Verify server is running:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl http://127.0.0.1:8012/health\n# Should return: {"status": "healthy"}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Check Claude Code logs:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["macOS: ",(0,i.jsx)(n.code,{children:"~/Library/Logs/Claude/"})]}),"\n",(0,i.jsxs)(n.li,{children:["Windows: ",(0,i.jsx)(n.code,{children:"%APPDATA%\\Claude\\logs\\"})]}),"\n",(0,i.jsxs)(n.li,{children:["Linux: ",(0,i.jsx)(n.code,{children:"~/.config/Claude/logs/"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Test tool manually:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# In Claude Code, type:\n"List available MCP tools"\n# Should show: rag_answer, rag_search, rag_feedback, netlify_deploy, web_get\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"performance--cost",children:"Performance & Cost"}),"\n",(0,i.jsx)(n.h3,{id:"token-comparison",children:"Token Comparison"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Approach"}),(0,i.jsx)(n.th,{children:"Tokens/Query"}),(0,i.jsx)(n.th,{children:"Queries/Week (Claude Pro)"}),(0,i.jsx)(n.th,{children:"Cost"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Claude Code alone"})}),(0,i.jsx)(n.td,{children:"~12,700"}),(0,i.jsx)(n.td,{children:"~100"}),(0,i.jsx)(n.td,{children:"$0/query (included)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Claude Code + RAG"})}),(0,i.jsx)(n.td,{children:"~1,141"}),(0,i.jsx)(n.td,{children:"~1,110"}),(0,i.jsx)(n.td,{children:"$0/query (local models)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Savings"})}),(0,i.jsx)(n.td,{children:"91% reduction"}),(0,i.jsx)(n.td,{children:"11x more queries"}),(0,i.jsx)(n.td,{children:"Same or lower"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"latency",children:"Latency"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Component"}),(0,i.jsx)(n.th,{children:"Time"}),(0,i.jsx)(n.th,{children:"Notes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Hybrid search"}),(0,i.jsx)(n.td,{children:"~200ms"}),(0,i.jsx)(n.td,{children:"BM25 + Qdrant + RRF"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Reranking"}),(0,i.jsx)(n.td,{children:"~150ms"}),(0,i.jsx)(n.td,{children:"Local cross-encoder"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"LLM generation"}),(0,i.jsx)(n.td,{children:"~2-5s"}),(0,i.jsx)(n.td,{children:"Ollama Qwen3 30B (local)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Total"})}),(0,i.jsx)(n.td,{children:"~2.5-5.5s"}),(0,i.jsx)(n.td,{children:"Same as Claude reading 10 files"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"cost-breakdown-api-models",children:"Cost Breakdown (API Models)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# Cost per rag_answer call (gpt-4o-mini generation)\nInput tokens:  ~500 (context) @ $0.15/1M  = $0.000075\nOutput tokens: ~150 (answer)  @ $0.60/1M  = $0.000090\nTotal: ~$0.000165 per query\n\n# vs Claude Code alone\nClaude reading 10 files = 20,000 tokens (no extra cost, but burns rate limit)\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"mcp-server-not-responding",children:'"MCP server not responding"'}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Check server is running:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ps aux | grep mcp_server.py\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Start if needed:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bash scripts/up.sh\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Check logs:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"tail -f /tmp/mcp_server.log  # If logging enabled\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"tools-not-appearing-in-claude-code",children:'"Tools not appearing in Claude Code"'}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Verify mcp.json syntax:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python -m json.tool ~/.config/claude/mcp.json\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Check command path is absolute:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "command": "/Users/you/agro/.venv/bin/python",  // \u2705 Absolute\n  "args": ["/Users/you/agro/server/mcp/server.py"]  // \u2705 Absolute\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Restart Claude Code completely"})," (not just reload window)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"invalid-repo-error",children:'"Invalid repo error"'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:"{\"error\": \"invalid repo 'xyz', allowed=['agro']\"}\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution:"})," Add repo to ",(0,i.jsx)(n.code,{children:"repos.json"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Via GUI: Repositories tab \u2192 Add Repository\n# Or manually edit repos.json:\n{\n  "xyz": {\n    "path": "/path/to/xyz",\n    "indexed": true\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Then reindex:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"REPO=xyz python indexer/index_repo.py\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"graph-not-initialized",children:'"Graph not initialized"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Cause:"})," LangGraph failed to build (missing dependencies, Redis down, etc.)"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Check health endpoint\ncurl http://127.0.0.1:8012/health\n# Should show: "graph_loaded": true\n\n# If false, check Redis:\ndocker ps | grep redis\n# Should show: rag-redis running\n\n# Restart infra:\nmake down && make up\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"http-transport-details",children:"HTTP Transport Details"}),"\n",(0,i.jsx)(n.h3,{id:"start-http-mcp-server",children:"Start HTTP MCP Server"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Via API\ncurl -X POST http://127.0.0.1:8012/api/mcp/http/start \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"port\": 8013}'\n\n# Via GUI\n# Infrastructure tab \u2192 MCP HTTP Server \u2192 Start\n"})}),"\n",(0,i.jsx)(n.h3,{id:"check-status",children:"Check Status"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl http://127.0.0.1:8012/api/mcp/status\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "stdio": {\n    "enabled": true,\n    "config_path": "/Users/you/.config/claude/mcp.json"\n  },\n  "http": {\n    "enabled": true,\n    "url": "http://127.0.0.1:8013",\n    "status": "running"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"stop-http-server",children:"Stop HTTP Server"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X POST http://127.0.0.1:8012/api/mcp/http/stop\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsx)(n.h3,{id:"stdio-transport",children:"STDIO Transport"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Trusted by default"}),": Runs as local process with same permissions as Claude Code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No network exposure"}),": Communication via stdin/stdout only"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inherits env"}),": Uses your ",(0,i.jsx)(n.code,{children:".env"})," variables and API keys"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"http-transport",children:"HTTP Transport"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Local network only"}),": Binds to ",(0,i.jsx)(n.code,{children:"127.0.0.1"})," by default (not ",(0,i.jsx)(n.code,{children:"0.0.0.0"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No authentication"}),": Assumes trusted local network"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Production use"}),": Add API key auth and TLS/HTTPS"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"For production HTTP:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Add authentication middleware in server/mcp/http.py\nfrom fastapi import Header, HTTPException\n\nasync def verify_api_key(x_api_key: str = Header(...)):\n    if x_api_key != os.getenv("MCP_API_KEY"):\n        raise HTTPException(status_code=401, detail="Invalid API key")\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/agro-rag-engine/api/endpoints",children:"HTTP Endpoints"})})," - Direct REST API access (no MCP)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/agro-rag-engine/features/rag",children:"RAG System"})})," - Understand how hybrid search works"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/agro-rag-engine/features/learning-reranker",children:"Learning Reranker"})})," - Train custom model on your code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/agro-rag-engine/operations/troubleshooting",children:"Troubleshooting"})})," - Debug common issues"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>a});var s=r(6540);const i={},l=s.createContext(i);function t(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);