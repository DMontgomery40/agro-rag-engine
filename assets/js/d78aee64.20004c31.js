"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[873],{3851:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","href":"/agro-rag-engine/","label":"Introduction","docId":"intro","unlisted":false},{"type":"category","label":"Getting Started","collapsed":false,"items":[{"type":"link","href":"/agro-rag-engine/getting-started/quickstart","label":"Quick Start","docId":"getting-started/quickstart","unlisted":false},{"type":"link","href":"/agro-rag-engine/getting-started/installation","label":"Installation","docId":"getting-started/installation","unlisted":false},{"type":"link","href":"/agro-rag-engine/getting-started/first-steps","label":"First Steps","docId":"getting-started/first-steps","unlisted":false}],"collapsible":true},{"type":"category","label":"Core Features","items":[{"type":"link","href":"/agro-rag-engine/features/rag","label":"RAG System","docId":"features/rag","unlisted":false},{"type":"link","href":"/agro-rag-engine/features/learning-reranker","label":"Learning Reranker System","docId":"features/learning-reranker","unlisted":false},{"type":"link","href":"/agro-rag-engine/features/mcp","label":"MCP Integration","docId":"features/mcp","unlisted":false},{"type":"link","href":"/agro-rag-engine/features/chat-interface","label":"Chat Interface","docId":"features/chat-interface","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Reference","items":[{"type":"link","href":"/agro-rag-engine/api/reference","label":"API Reference","docId":"api/reference","unlisted":false},{"type":"link","href":"/agro-rag-engine/api/endpoints","label":"HTTP Endpoints","docId":"api/endpoints","unlisted":false},{"type":"link","href":"/agro-rag-engine/api/mcp-tools","label":"MCP Tools","docId":"api/mcp-tools","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Configuration","items":[{"type":"link","href":"/agro-rag-engine/configuration/models","label":"Model Configuration","docId":"configuration/models","unlisted":false},{"type":"link","href":"/agro-rag-engine/configuration/performance","label":"Performance & Cost Analysis","docId":"configuration/performance","unlisted":false},{"type":"link","href":"/agro-rag-engine/configuration/filtering","label":"Filtering & Exclusions","docId":"configuration/filtering","unlisted":false},{"type":"link","href":"/agro-rag-engine/configuration/alerting","label":"Alerting System","docId":"configuration/alerting","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Development","items":[{"type":"link","href":"/agro-rag-engine/development/contributing","label":"Contributing","docId":"development/contributing","unlisted":false},{"type":"link","href":"/agro-rag-engine/development/vscode-setup","label":"VS Code Setup","docId":"development/vscode-setup","unlisted":false},{"type":"link","href":"/agro-rag-engine/development/architecture","label":"Architecture","docId":"development/architecture","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Operations","items":[{"type":"link","href":"/agro-rag-engine/operations/deployment","label":"Deployment","docId":"operations/deployment","unlisted":false},{"type":"link","href":"/agro-rag-engine/operations/monitoring","label":"Monitoring","docId":"operations/monitoring","unlisted":false},{"type":"link","href":"/agro-rag-engine/operations/troubleshooting","label":"Troubleshooting","docId":"operations/troubleshooting","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"api/endpoints":{"id":"api/endpoints","title":"HTTP Endpoints","description":"AGRO exposes a comprehensive REST API for retrieval, generation, indexing, evaluation, and system management. All endpoints run on the FastAPI server at http8012.","sidebar":"docs"},"api/mcp-tools":{"id":"api/mcp-tools","title":"MCP Tools","description":"AGRO exposes a Model Context Protocol (MCP) server that AI agents like Claude Code and Codex can use to query your codebase. Instead of reading entire files (burning tokens), agents call RAG tools that return only the relevant chunks with citations.","sidebar":"docs"},"api/reference":{"id":"api/reference","title":"API Reference","description":"Complete reference for AGRO\'s HTTP API. All endpoints return JSON unless otherwise specified.","sidebar":"docs"},"configuration/alerting":{"id":"configuration/alerting","title":"Alerting System","description":"AGRO\'s comprehensive alerting system catches incidents like orphaned loops before they cost hundreds of dollars. The system combines Prometheus for metrics, AlertManager for routing, and FastAPI webhooks for logging.","sidebar":"docs"},"configuration/filtering":{"id":"configuration/filtering","title":"Filtering & Exclusions","description":"AGRO\'s indexer automatically excludes noise files (tests, node_modules, build artifacts) to keep retrieval focused on production code. This is critical for retrieval quality - including tests can tank accuracy from 82% to 1.9%.","sidebar":"docs"},"configuration/models":{"id":"configuration/models","title":"Model Configuration","description":"Complete guide to choosing embedding and inference models for AGRO based on your requirements, budget, and hardware.","sidebar":"docs"},"configuration/performance":{"id":"configuration/performance","title":"Performance & Cost Analysis","description":"AGRO dramatically reduces token consumption compared to using AI assistants without RAG. This document shows real-world performance data and cost savings.","sidebar":"docs"},"development/architecture":{"id":"development/architecture","title":"Architecture","description":"AGRO is a production-grade RAG system with a modular architecture designed for code retrieval. This page explains the system components, data flow, and key design decisions.","sidebar":"docs"},"development/contributing":{"id":"development/contributing","title":"Contributing","description":"Contributions to AGRO are welcome! This guide covers the development setup, testing procedures, and contribution workflow.","sidebar":"docs"},"development/vscode-setup":{"id":"development/vscode-setup","title":"VS Code Setup","description":"Embedded VS Code editor in AGRO GUI.","sidebar":"docs"},"features/chat-interface":{"id":"features/chat-interface","title":"Chat Interface","description":"AGRO provides an interactive terminal chat interface for the RAG service with full conversation memory and persistence.","sidebar":"docs"},"features/learning-reranker":{"id":"features/learning-reranker","title":"Learning Reranker System","description":"AGRO\'s learning reranker is a complete ML pipeline that continuously improves search quality by collecting user feedback and training a cross-encoder model specifically on YOUR codebase.","sidebar":"docs"},"features/mcp":{"id":"features/mcp","title":"MCP Integration","description":"The Model Context Protocol (MCP) integration allows AI agents like Codex and Claude Code to directly query AGRO\'s RAG system through a standardized interface.","sidebar":"docs"},"features/rag":{"id":"features/rag","title":"RAG System","description":"AGRO\'s hybrid search architecture combines three retrieval methods, applies learned reranking, and uses confidence gating to prevent hallucination. This isn\'t \\"just throw it at a vector database\\" - it\'s a production-grade pipeline built for code retrieval.","sidebar":"docs"},"getting-started/first-steps":{"id":"getting-started/first-steps","title":"First Steps","description":"Your first queries with AGRO.","sidebar":"docs"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Complete installation guide for AGRO.","sidebar":"docs"},"getting-started/quickstart":{"id":"getting-started/quickstart","title":"Quick Start","description":"Get AGRO running in 5 minutes.","sidebar":"docs"},"intro":{"id":"intro","title":"Welcome to AGRO","description":"The Token Crisis is Real","sidebar":"docs"},"operations/deployment":{"id":"operations/deployment","title":"Deployment","description":"Deploy AGRO to production with Docker Compose, environment configuration, and scaling strategies.","sidebar":"docs"},"operations/monitoring":{"id":"operations/monitoring","title":"Monitoring","description":"AGRO includes production-grade telemetry with Grafana dashboards, Prometheus metrics, Loki log aggregation, and LangSmith tracing. All monitoring components run in Docker and are accessible through the GUI.","sidebar":"docs"},"operations/troubleshooting":{"id":"operations/troubleshooting","title":"Troubleshooting","description":"Common issues and solutions for AGRO deployment, retrieval, and performance problems.","sidebar":"docs"}}}}')}}]);