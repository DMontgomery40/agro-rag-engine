[
  {
    "_comment": "AGRO RAG Engine - Golden Test Questions",
    "_comment2": "expect_paths includes ALL relevant files, not just the main one"
  },
  {
    "q": "Where is the hybrid search implementation that combines BM25 and vector search?",
    "repo": "agro",
    "expect_paths": [
      "retrieval/hybrid_search.py",
      "server/langgraph_app.py",
      "server/app.py",
      "eval/eval_rag.py"
    ]
  },
  {
    "q": "How does the indexing pipeline work? Where is the main indexer?",
    "repo": "agro",
    "expect_paths": [
      "indexer/index_repo.py",
      "retrieval/ast_chunker.py",
      "common/filtering.py",
      "common/config_loader.py",
      "retrieval/embed_cache.py",
      "common/qdrant_utils.py"
    ]
  },
  {
    "q": "Where is the FastAPI server and main API routes defined?",
    "repo": "agro",
    "expect_paths": [
      "server/app.py",
      "server/langgraph_app.py",
      "server/feedback.py",
      "server/telemetry.py",
      "server/metrics.py"
    ]
  },
  {
    "q": "Where is the LangGraph conversational RAG pipeline implemented?",
    "repo": "agro",
    "expect_paths": [
      "server/langgraph_app.py",
      "retrieval/hybrid_search.py",
      "server/tracing.py",
      "server/app.py"
    ]
  },
  {
    "q": "How does the cross-encoder reranker work?",
    "repo": "agro",
    "expect_paths": [
      "retrieval/rerank.py",
      "retrieval/hybrid_search.py",
      "scripts/train_reranker.py",
      "scripts/mine_triplets.py",
      "gui/js/reranker.js"
    ]
  },
  {
    "q": "Where is the MCP (Model Context Protocol) server for stdio transport?",
    "repo": "agro",
    "expect_paths": [
      "server/mcp/server.py",
      "server/mcp/http.py",
      "node_mcp/server.js",
      "server/langgraph_app.py"
    ]
  },
  {
    "q": "Where is the GUI main HTML and JavaScript?",
    "repo": "agro",
    "expect_paths": [
      "gui/index.html",
      "gui/app.js",
      "gui/js/navigation.js",
      "gui/js/chat.js",
      "gui/js/dashboard.js",
      "gui/css/styles.css"
    ]
  },
  {
    "q": "How does the navigation system work in the GUI?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/navigation.js",
      "gui/index.html",
      "gui/app.js"
    ]
  },
  {
    "q": "Where is the chat interface implementation?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/chat.js",
      "gui/index.html",
      "server/app.py",
      "server/langgraph_app.py",
      "cli/chat_cli.py"
    ]
  },
  {
    "q": "Where is the AST-aware code chunking implemented?",
    "repo": "agro",
    "expect_paths": [
      "retrieval/ast_chunker.py",
      "indexer/index_repo.py",
      "common/filtering.py"
    ]
  },
  {
    "q": "How does the embedding cache work to avoid recomputation?",
    "repo": "agro",
    "expect_paths": [
      "retrieval/embed_cache.py",
      "indexer/index_repo.py",
      "retrieval/hybrid_search.py"
    ]
  },
  {
    "q": "Where is the semantic card building logic?",
    "repo": "agro",
    "expect_paths": [
      "indexer/build_cards.py",
      "common/metadata.py",
      "server/cards_builder.py",
      "gui/js/cards.js"
    ]
  },
  {
    "q": "Where is the repository configuration loaded from repos.json?",
    "repo": "agro",
    "expect_paths": [
      "common/config_loader.py",
      "repos.json",
      "server/app.py",
      "gui/js/config.js",
      "indexer/index_repo.py"
    ]
  },
  {
    "q": "How are file filtering and exclusion rules defined?",
    "repo": "agro",
    "expect_paths": [
      "common/filtering.py",
      "data/exclude_globs.txt",
      "retrieval/ast_chunker.py",
      "indexer/index_repo.py"
    ]
  },
  {
    "q": "Where is the metadata enrichment for code chunks?",
    "repo": "agro",
    "expect_paths": [
      "common/metadata.py",
      "indexer/build_cards.py",
      "server/cards_builder.py"
    ]
  },
  {
    "q": "Where is the Qdrant vector database integration?",
    "repo": "agro",
    "expect_paths": [
      "common/qdrant_utils.py",
      "retrieval/hybrid_search.py",
      "indexer/index_repo.py",
      "docker-compose.yml"
    ]
  },
  {
    "q": "How does multi-query expansion work?",
    "repo": "agro",
    "expect_paths": [
      "retrieval/hybrid_search.py",
      "server/langgraph_app.py",
      "retrieval/synonym_expander.py"
    ]
  },
  {
    "q": "Where is the tracing system for debugging RAG pipelines?",
    "repo": "agro",
    "expect_paths": [
      "server/tracing.py",
      "server/app.py",
      "server/langgraph_app.py",
      "gui/js/traces.js"
    ]
  },
  {
    "q": "Where are the keyword generation scripts?",
    "repo": "agro",
    "expect_paths": [
      "scripts/generate_smart_keywords.py",
      "data/discriminative_keywords.json",
      "data/semantic_keywords.json",
      "data/llm_keywords.json",
      "retrieval/hybrid_search.py"
    ]
  },
  {
    "q": "How does the reranker training with triplets work?",
    "repo": "agro",
    "expect_paths": [
      "scripts/mine_triplets.py",
      "scripts/train_reranker.py",
      "data/training/triplets.jsonl",
      "retrieval/rerank.py",
      "data/logs/queries.jsonl"
    ]
  },
  {
    "q": "Where is the Docker Compose and infrastructure setup?",
    "repo": "agro",
    "expect_paths": [
      "docker-compose.yml",
      "docker-compose.services.yml",
      "Dockerfile",
      "Dockerfile.node",
      "scripts/up.sh",
      "scripts/down.sh"
    ]
  },
  {
    "q": "Where is the Grafana dashboard configuration?",
    "repo": "agro",
    "expect_paths": [
      "infra/grafana/provisioning/dashboards/agro_overview.json",
      "infra/grafana/provisioning/dashboards/dashboard.yml",
      "infra/grafana/provisioning/datasources/datasource.yml",
      "docker-compose.yml",
      "gui/js/grafana.js"
    ]
  },
  {
    "q": "Where is the Prometheus metrics configuration?",
    "repo": "agro",
    "expect_paths": [
      "infra/prometheus.yml",
      "infra/prometheus-alert-rules.yml",
      "server/metrics.py",
      "telemetry/prometheus.yml",
      "docker-compose.yml"
    ]
  },
  {
    "q": "How does the CLI chat tool work?",
    "repo": "agro",
    "expect_paths": [
      "cli/chat_cli.py",
      "server/app.py",
      "server/langgraph_app.py",
      "retrieval/hybrid_search.py"
    ]
  },
  {
    "q": "Where are the Playwright end-to-end tests?",
    "repo": "agro",
    "expect_paths": [
      "tests/gui.spec.ts",
      "tests/api.spec.ts",
      "tests/test_dashboard.py",
      "tests/test_metrics_tab.py",
      "tools/playwright.config.ts"
    ]
  },
  {
    "q": "Where is the evaluation harness for testing RAG quality?",
    "repo": "agro",
    "expect_paths": [
      "eval/eval_rag.py",
      "eval/eval_loop.py",
      "data/golden.json",
      "data/evals/eval_baseline.json",
      "gui/js/golden_questions.js"
    ]
  },
  {
    "q": "How does the theme system work in the GUI?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/theme.js",
      "gui/css/styles.css",
      "gui/index.html",
      "gui/app.js"
    ]
  },
  {
    "q": "Where is the configuration management in the GUI?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/config.js",
      "server/app.py",
      "common/config_loader.py",
      "repos.json"
    ]
  },
  {
    "q": "Where is the index statistics computation?",
    "repo": "agro",
    "expect_paths": [
      "server/index_stats.py",
      "indexer/index_stats.py",
      "server/app.py",
      "gui/js/index_display.js"
    ]
  },
  {
    "q": "How does the confidence gating work in LangGraph?",
    "repo": "agro",
    "expect_paths": [
      "server/langgraph_app.py",
      "retrieval/hybrid_search.py",
      "retrieval/rerank.py"
    ]
  },
  {
    "q": "Where are the API endpoint handlers for RAG queries?",
    "repo": "agro",
    "expect_paths": [
      "server/app.py",
      "server/langgraph_app.py",
      "server/mcp/server.py",
      "server/mcp/http.py"
    ]
  },
  {
    "q": "How does the query rewriting work when confidence is low?",
    "repo": "agro",
    "expect_paths": [
      "server/langgraph_app.py",
      "retrieval/hybrid_search.py",
      "server/env_model.py"
    ]
  },
  {
    "q": "Where is the synonym expansion for semantic search?",
    "repo": "agro",
    "expect_paths": [
      "retrieval/synonym_expander.py",
      "data/semantic_synonyms.json",
      "retrieval/hybrid_search.py"
    ]
  },
  {
    "q": "Where are the cost calculation utilities for token usage?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/cost.js",
      "gui/prices.json",
      "server/metrics.py",
      "gui/index.html"
    ]
  },
  {
    "q": "How does the dashboard tab render system status?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/dashboard.js",
      "server/app.py",
      "server/index_stats.py",
      "gui/index.html"
    ]
  },
  {
    "q": "Where is the telemetry logging for queries and feedback?",
    "repo": "agro",
    "expect_paths": [
      "server/telemetry.py",
      "data/logs/queries.jsonl",
      "server/app.py",
      "server/feedback.py"
    ]
  },
  {
    "q": "How does the MCP HTTP server work?",
    "repo": "agro",
    "expect_paths": [
      "server/mcp/http.py",
      "server/mcp/server.py",
      "server/langgraph_app.py"
    ]
  },
  {
    "q": "Where is the Node.js MCP server implementation?",
    "repo": "agro",
    "expect_paths": [
      "node_mcp/server.js",
      "node_mcp/package.json",
      "server/langgraph_app.py"
    ]
  },
  {
    "q": "Where are the common path utilities?",
    "repo": "agro",
    "expect_paths": [
      "common/paths.py",
      "common/config_loader.py",
      "indexer/index_repo.py"
    ]
  },
  {
    "q": "How does the file selection and upload work in the GUI?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/dropzone.js",
      "gui/index.html",
      "server/app.py"
    ]
  },
  {
    "q": "Where is the golden questions test runner?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/golden_questions.js",
      "data/golden.json",
      "eval/eval_rag.py",
      "server/app.py"
    ]
  },
  {
    "q": "How does the auto-profile wizard work?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/autotune.js",
      "gui/autotune_policy.json",
      "gui/index.html",
      "server/app.py"
    ]
  },
  {
    "q": "Where is the infrastructure management in the GUI?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/infrastructure.js",
      "docker-compose.yml",
      "scripts/up.sh",
      "scripts/status.sh"
    ]
  },
  {
    "q": "How does the reranker UI component work?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/reranker.js",
      "retrieval/rerank.py",
      "server/app.py",
      "gui/index.html"
    ]
  },
  {
    "q": "Where are the alert configuration and management?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/alerts.js",
      "infra/alertmanager.yml",
      "infra/prometheus-alert-rules.yml",
      "server/metrics.py"
    ]
  },
  {
    "q": "How does the profiles system work for saving configurations?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/profiles.js",
      "gui/profiles/",
      "server/app.py",
      "gui/index.html"
    ]
  },
  {
    "q": "Where is the VS Code integration for embedded editor?",
    "repo": "agro",
    "expect_paths": [
      "gui/js/vscode.js",
      "gui/index.html",
      "scripts/editor_up.sh",
      "scripts/editor_down.sh"
    ]
  },
  {
    "q": "How does the Makefile orchestrate development tasks?",
    "repo": "agro",
    "expect_paths": [
      "Makefile",
      "scripts/up.sh",
      "scripts/down.sh",
      "docker-compose.yml"
    ]
  },
  {
    "q": "Where are the Python requirements defined?",
    "repo": "agro",
    "expect_paths": [
      "requirements.txt",
      "requirements-rag.txt",
      "requirements.lock"
    ]
  },
  {
    "q": "How does the feedback collection system work?",
    "repo": "agro",
    "expect_paths": [
      "server/feedback.py",
      "server/telemetry.py",
      "data/logs/queries.jsonl",
      "server/app.py"
    ]
  }
]
