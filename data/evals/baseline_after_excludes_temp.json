Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. paths.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. app.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. paths.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[1/52] repo=agro q=Where is the hybrid search implementation that combines BM25 and vector search?
  top1=['/Users/davidmontgomery/agro-rag-engine/retrieval/hybrid_search.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. chat_cli.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. index_repo.py (python)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. langgraph_app.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. onboarding.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. chat_cli.py (python)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. index_status.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. chat_cli.py (python)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. langgraph_app.py (python)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. index_repo.py (python)
    2. path_config.py (python)
    3. __init__.py (python)
    4. langgraph_app.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. index_status.js (javascript)
    4. langgraph_app.py (python)
    5. onboarding.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. index_status.js (javascript)
    4. chat_cli.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. langgraph_app.py (python)
    5. onboarding.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. __init__.py (python)
    4. langgraph_app.py (python)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[2/52] repo=agro q=How does the indexing pipeline work? Where is the main indexer?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/indexing.js']
  top5 hit=False
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. chat_cli.py (python)
    5. feedback.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. paths.py (python)
    5. feedback.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. paths.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. chat_cli.py (python)
    5. smoke_test_rag.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. chat_cli.py (python)
    5. metrics.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[3/52] repo=agro q=Where is the FastAPI server and main API routes defined?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/app.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. requirements-rag.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. requirements-rag.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. paths.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. requirements-rag.txt (text)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. chat_cli.py (python)
    5. requirements-rag.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. requirements-rag.txt (text)
    4. langgraph_app.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. requirements-rag.txt (text)
    4. chat_cli.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. langgraph_app.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[4/52] repo=agro q=Where is the LangGraph conversational RAG pipeline implemented?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/langgraph_app.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. promote_reranker.py (python)
    2. path_config.py (python)
    3. reranker.py (python)
    4. langgraph_app.py (python)
    5. train_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. reranker.py (python)
    2. path_config.py (python)
    3. rerank.py (python)
    4. langgraph_app.py (python)
    5. train_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. promote_reranker.py (python)
    4. chat_cli.py (python)
    5. reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. rerank.py (python)
    4. langgraph_app.py (python)
    5. reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. reranker.py (python)
    2. path_config.py (python)
    3. rerank.py (python)
    4. langgraph_app.py (python)
    5. promote_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. promote_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. chat_cli.py (python)
    5. reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. reranker.py (python)
    2. path_config.py (python)
    3. promote_reranker.py (python)
    4. chat_cli.py (python)
    5. rerank.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. promote_reranker.py (python)
    4. langgraph_app.py (python)
    5. reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. reranker.py (python)
    4. langgraph_app.py (python)
    5. promote_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. promote_reranker.py (python)
    4. langgraph_app.py (python)
    5. rerank.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[5/52] repo=agro q=How does the cross-encoder reranker work?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/reranker.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.py (python)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. paths.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. telemetry.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. server.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.py (python)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. paths.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. chat_cli.py (python)
    5. server.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. chat_cli.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. server.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[6/52] repo=agro q=Where is the MCP (Model Context Protocol) server for stdio transport?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/mcp/server.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. gui_debug.py (python)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[7/52] repo=agro q=Where is the GUI main HTML and JavaScript?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/app.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. langgraph_app.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. langgraph_app.py (python)
    5. navigation.spec.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. chat_cli.py (python)
    5. navigation.spec.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. chat_cli.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. langgraph_app.py (python)
    5. navigation.spec.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. langgraph_app.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. chat_cli.py (python)
    5. rag-navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. langgraph_app.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. langgraph_app.py (python)
    5. navigation.spec.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.spec.ts (typescript)
    4. chat_cli.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[8/52] repo=agro q=How does the navigation system work in the GUI?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/navigation.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. chat_cli.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. chat_cli.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[9/52] repo=agro q=Where is the chat interface implementation?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/chat.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. chat_cli.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. chat_cli.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. chat_cli.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. chat_cli.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. langgraph_app.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. chat_cli.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. chat_cli.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. langgraph_app.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. chat_cli.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. chat_cli.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[10/52] repo=agro q=Where is the AST-aware code chunking implemented?
  top1=['/Users/davidmontgomery/agro-rag-engine/retrieval/ast_chunker.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. langgraph_app.py (python)
    5. storage-calculator.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. chat_cli.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. chat_cli.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. chat_cli.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. chat_cli.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. embed_cache.py (python)
    2. path_config.py (python)
    3. embed_cache.py (python)
    4. langgraph_app.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[11/52] repo=agro q=How does the embedding cache work to avoid recomputation?
  top1=['/Users/davidmontgomery/agro-rag-engine/retrieval/embed_cache.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. chat_cli.py (python)
    5. cards.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. langgraph_app.py (python)
    5. cards_builder.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. langgraph_app.py (python)
    5. cards.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. chat_cli.py (python)
    5. cards_builder.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. langgraph_app.py (python)
    5. cards.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. chat_cli.py (python)
    5. cards.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. langgraph_app.py (python)
    5. cards_builder.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. langgraph_app.py (python)
    5. cards.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. chat_cli.py (python)
    5. cards_builder.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cards.js (javascript)
    2. path_config.py (python)
    3. cards.js (javascript)
    4. langgraph_app.py (python)
    5. cards.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[12/52] repo=agro q=Where is the semantic card building logic?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/cards.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. chat_cli.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. config_loader.py (python)
    4. chat_cli.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. make_repos_json.py (python)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. make_repos_json.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. chat_cli.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. make_repos_json.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. chat_cli.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. chat_cli.py (python)
    5. simple_index.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config_loader.py (python)
    2. path_config.py (python)
    3. config_loader.py (python)
    4. chat_cli.py (python)
    5. make_repos_json.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[13/52] repo=agro q=Where is the repository configuration loaded from repos.json?
  top1=['/Users/davidmontgomery/agro-rag-engine/path_config.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. chat_cli.py (python)
    5. exclude_globs.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. exclude_globs.txt (text)
    4. chat_cli.py (python)
    5. index_repo.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. chat_cli.py (python)
    5. filtering.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. chat_cli.py (python)
    5. exclude_globs.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. chat_cli.py (python)
    5. exclude_globs.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. chat_cli.py (python)
    5. filtering.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. exclude_globs.txt (text)
    4. chat_cli.py (python)
    5. index_repo.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. exclude_globs.txt (text)
    4. chat_cli.py (python)
    5. index_repo.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. langgraph_app.py (python)
    5. exclude_globs.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. exclude_globs.txt (text)
    2. path_config.py (python)
    3. index_repo.py (python)
    4. chat_cli.py (python)
    5. ALL_KNOBS.yaml (yaml)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[14/52] repo=agro q=How are file filtering and exclusion rules defined?
  top1=['/Users/davidmontgomery/agro-rag-engine/path_config.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. metadata.py (python)
    2. path_config.py (python)
    3. tooltips.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. metadata.py (python)
    2. path_config.py (python)
    3. tooltips.js (javascript)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. profile_renderer.js (javascript)
    4. langgraph_app.py (python)
    5. metadata.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. metadata.py (python)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. langgraph_app.py (python)
    5. tooltips.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. tooltips.js (javascript)
    2. path_config.py (python)
    3. metadata.py (python)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. metadata.py (python)
    2. path_config.py (python)
    3. tooltips.js (javascript)
    4. chat_cli.py (python)
    5. tooltips.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. metadata.py (python)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. tooltips.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. metadata.py (python)
    2. path_config.py (python)
    3. app.js (javascript)
    4. langgraph_app.py (python)
    5. tooltips.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. tooltips.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[15/52] repo=agro q=Where is the metadata enrichment for code chunks?
  top1=['/Users/davidmontgomery/agro-rag-engine/common/metadata.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. tooltips.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. tooltips.js (javascript)
    4. langgraph_app.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. index_repo.py (python)
    2. path_config.py (python)
    3. qdrant_utils.py (python)
    4. langgraph_app.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. tooltips.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. tooltips.js (javascript)
    4. langgraph_app.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. langgraph_app.py (python)
    5. index_repo.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. smoke_test_rag.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. langgraph_app.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. qdrant_utils.py (python)
    2. path_config.py (python)
    3. tooltips.js (javascript)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[16/52] repo=agro q=Where is the Qdrant vector database integration?
  top1=['/Users/davidmontgomery/agro-rag-engine/common/qdrant_utils.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. langgraph_app.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. profile_renderer.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. langgraph_app.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. langgraph_app.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. langgraph_app.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. profile_renderer.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. langgraph_app.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[17/52] repo=agro q=How does multi-query expansion work?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/langgraph_app.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. paths.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. smoke_test_rag.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. trace.js (javascript)
    2. path_config.py (python)
    3. trace.js (javascript)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[18/52] repo=agro q=Where is the tracing system for debugging RAG pipelines?
  top1=['/Users/davidmontgomery/agro-rag-engine/path_config.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. keywords.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. keywords.js (javascript)
    4. langgraph_app.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. keywords.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. chat_cli.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. keywords.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. keywords.js (javascript)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. keywords.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. keywords.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. keywords.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[19/52] repo=agro q=Where are the keyword generation scripts?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/keywords.js']
  top5 hit=False
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. train_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. train_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. langgraph_app.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. langgraph_app.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. langgraph_app.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. langgraph_app.py (python)
    5. promote_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. langgraph_app.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[20/52] repo=agro q=How does the reranker training with triplets work?
  top1=['/Users/davidmontgomery/agro-rag-engine/scripts/train_reranker.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. chat_cli.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. langgraph_app.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. langgraph_app.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. chat_cli.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. chat_cli.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. langgraph_app.py (python)
    5. up.sh (bash)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. langgraph_app.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. chat_cli.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. langgraph_app.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. docker-compose.yml (yaml)
    2. path_config.py (python)
    3. docker-compose.yml (yaml)
    4. chat_cli.py (python)
    5. docker-compose.yml (yaml)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[21/52] repo=agro q=Where is the Docker Compose and infrastructure setup?
  top1=['/Users/davidmontgomery/agro-rag-engine/docker-compose.yml']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. langgraph_app.py (python)
    5. setup_grafana.sh (bash)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. langgraph_app.py (python)
    5. dashboards.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. chat_cli.py (python)
    5. dashboards.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. langgraph_app.py (python)
    5. dashboards.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. setup_grafana.sh (bash)
    2. path_config.py (python)
    3. grafana.js (javascript)
    4. langgraph_app.py (python)
    5. grafana_dash.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. chat_cli.py (python)
    5. dashboards.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. setup_grafana.sh (bash)
    4. langgraph_app.py (python)
    5. dashboards.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. langgraph_app.py (python)
    5. dashboards.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. langgraph_app.py (python)
    5. setup_grafana.sh (bash)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. grafana.js (javascript)
    2. path_config.py (python)
    3. setup_grafana.sh (bash)
    4. langgraph_app.py (python)
    5. grafana_dash.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[22/52] repo=agro q=Where is the Grafana dashboard configuration?
  top1=['/Users/davidmontgomery/agro-rag-engine/telemetry/grafana_dash.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. chat_cli.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. prometheus.yml (yaml)
    2. path_config.py (python)
    3. prometheus.yml (yaml)
    4. langgraph_app.py (python)
    5. prometheus.yml (yaml)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[23/52] repo=agro q=Where is the Prometheus metrics configuration?
  top1=['/Users/davidmontgomery/agro-rag-engine/infra/prometheus.yml']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. chat_cli.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. chat_cli.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. chat_cli.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. chat_cli.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. app.js (javascript)
    4. langgraph_app.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat_cli.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. chat_cli.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[24/52] repo=agro q=How does the CLI chat tool work?
  top1=['/Users/davidmontgomery/agro-rag-engine/cli/chat_cli.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.config.ts (typescript)
    4. langgraph_app.py (python)
    5. playwright.local.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.local.config.ts (typescript)
    4. chat_cli.py (python)
    5. playwright.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.config.ts (typescript)
    4. chat_cli.py (python)
    5. playwright.local.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.config.ts (typescript)
    4. chat_cli.py (python)
    5. playwright.local.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.local.config.ts (typescript)
    4. langgraph_app.py (python)
    5. playwright.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. editor_embed.spec.ts (typescript)
    4. chat_cli.py (python)
    5. playwright.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.config.ts (typescript)
    4. langgraph_app.py (python)
    5. playwright.local.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.config.ts (typescript)
    4. langgraph_app.py (python)
    5. playwright.local.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.config.ts (typescript)
    4. chat_cli.py (python)
    5. playwright.local.config.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. playwright.config.ts (typescript)
    2. path_config.py (python)
    3. playwright.config.ts (typescript)
    4. chat_cli.py (python)
    5. playwright.local.config.ts (typescript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[25/52] repo=agro q=Where are the Playwright end-to-end tests?
  top1=['/Users/davidmontgomery/agro-rag-engine/scripts/playwright.local.config.ts']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. inspect_eval.py (python)
    2. path_config.py (python)
    3. eval_rag.py (python)
    4. chat_cli.py (python)
    5. eval_rag.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. test-instrumentation.js (javascript)
    2. path_config.py (python)
    3. eval_runner.js (javascript)
    4. chat_cli.py (python)
    5. inspect_eval.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. test-instrumentation.js (javascript)
    2. path_config.py (python)
    3. phase2-smoke-test.spec.ts (typescript)
    4. chat_cli.py (python)
    5. smoke_test_rag.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. inspect_eval.py (python)
    2. path_config.py (python)
    3. eval_runner.js (javascript)
    4. paths.py (python)
    5. eval_rag.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. eval_rag.py (python)
    2. path_config.py (python)
    3. mcp_rag.js (javascript)
    4. langgraph_app.py (python)
    5. inspect_eval.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. eval_rag.py (python)
    2. path_config.py (python)
    3. inspect_eval.py (python)
    4. chat_cli.py (python)
    5. eval_runner.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. eval_rag.py (python)
    2. path_config.py (python)
    3. inspect_eval.py (python)
    4. chat_cli.py (python)
    5. mcp_rag.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. test-instrumentation.js (javascript)
    2. path_config.py (python)
    3. mcp_rag.js (javascript)
    4. chat_cli.py (python)
    5. phase2-smoke-test.spec.ts (typescript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_rag.js (javascript)
    2. path_config.py (python)
    3. mcp_rag.js (javascript)
    4. langgraph_app.py (python)
    5. inspect_eval.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. inspect_eval.py (python)
    2. path_config.py (python)
    3. eval_rag.py (python)
    4. chat_cli.py (python)
    5. eval_rag.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[26/52] repo=agro q=Where is the evaluation harness for testing RAG quality?
  top1=['/Users/davidmontgomery/agro-rag-engine/eval/eval_rag.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. langgraph_app.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. langgraph_app.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. chat_cli.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. chat_cli.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. chat_cli.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. langgraph_app.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. langgraph_app.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. langgraph_app.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. langgraph_app.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. theme.js (javascript)
    2. path_config.py (python)
    3. theme.js (javascript)
    4. chat_cli.py (python)
    5. theme.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[27/52] repo=agro q=How does the theme system work in the GUI?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/theme.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. chat_cli.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. chat_cli.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. config.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. langgraph_app.py (python)
    5. config.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[28/52] repo=agro q=Where is the configuration management in the GUI?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/langgraph_app.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. index-display.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. langgraph_app.py (python)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. index_stats.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. langgraph_app.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. langgraph_app.py (python)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. chat_cli.py (python)
    5. index_stats.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. chat_cli.py (python)
    5. index_stats.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. langgraph_app.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. index-display.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. langgraph_app.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. index-display.js (javascript)
    4. langgraph_app.py (python)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[29/52] repo=agro q=Where is the index statistics computation?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/index-display.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. langgraph_app.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. langgraph_app.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. langgraph_app.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. langgraph_app.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. langgraph_app.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[30/52] repo=agro q=How does the confidence gating work in LangGraph?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/langgraph_app.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. test_backend.py (python)
    2. path_config.py (python)
    3. server.js (javascript)
    4. chat_cli.py (python)
    5. mcp_rag.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.js (javascript)
    2. path_config.py (python)
    3. test_backend.py (python)
    4. chat_cli.py (python)
    5. mcp_rag.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_rag.js (javascript)
    2. path_config.py (python)
    3. mcp_rag.js (javascript)
    4. chat_cli.py (python)
    5. server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.js (javascript)
    2. path_config.py (python)
    3. mcp_rag.js (javascript)
    4. paths.py (python)
    5. test_backend.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. test_backend.py (python)
    2. path_config.py (python)
    3. server.js (javascript)
    4. chat_cli.py (python)
    5. mcp_rag.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. test_backend.py (python)
    2. path_config.py (python)
    3. server.js (javascript)
    4. chat_cli.py (python)
    5. mcp_rag.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_rag.js (javascript)
    2. path_config.py (python)
    3. test_backend.py (python)
    4. chat_cli.py (python)
    5. server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. test_backend.py (python)
    2. path_config.py (python)
    3. server.js (javascript)
    4. chat_cli.py (python)
    5. mcp_rag.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.js (javascript)
    2. path_config.py (python)
    3. mcp_rag.js (javascript)
    4. chat_cli.py (python)
    5. test_backend.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.js (javascript)
    2. path_config.py (python)
    3. mcp_rag.js (javascript)
    4. paths.py (python)
    5. mcp_rag.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[31/52] repo=agro q=Where are the API endpoint handlers for RAG queries?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/mcp_rag.js']
  top5 hit=False
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. profile_renderer.js (javascript)
    4. chat_cli.py (python)
    5. ALL_KNOBS.yaml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. chat_cli.py (python)
    5. ALL_KNOBS.yaml (yaml)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. ALL_KNOBS.yaml (yaml)
    4. chat_cli.py (python)
    5. profile_renderer.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. ALL_KNOBS.yaml (yaml)
    4. chat_cli.py (python)
    5. profile_renderer.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. chat_cli.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[32/52] repo=agro q=How does the query rewriting work when confidence is low?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/langgraph_app.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. langgraph_app.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. langgraph_app.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. langgraph_app.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. langgraph_app.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. synonym_expander.py (python)
    2. path_config.py (python)
    3. synonym_expander.py (python)
    4. chat_cli.py (python)
    5. synonym_expander.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[33/52] repo=agro q=Where is the synonym expansion for semantic search?
  top1=['/Users/davidmontgomery/agro-rag-engine/retrieval/synonym_expander.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cost_logic.js (javascript)
    2. path_config.py (python)
    3. quick_token_test.py (python)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. quick_token_test.py (python)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. cost_logic.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. cost_logic.js (javascript)
    4. chat_cli.py (python)
    5. cost_logic.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. cost_logic.js (javascript)
    4. paths.py (python)
    5. quick_token_test.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cost_logic.js (javascript)
    2. path_config.py (python)
    3. cost_logic.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cost_logic.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. cost_logic.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. quick_token_test.py (python)
    4. chat_cli.py (python)
    5. cost_logic.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. cost_logic.js (javascript)
    2. path_config.py (python)
    3. cost_logic.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. quick_token_test.py (python)
    2. path_config.py (python)
    3. full_comparison.py (python)
    4. chat_cli.py (python)
    5. quick_token_test.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. quick_token_test.py (python)
    2. path_config.py (python)
    3. cost_logic.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[34/52] repo=agro q=Where are the cost calculation utilities for token usage?
  top1=['/Users/davidmontgomery/agro-rag-engine/scripts/quick_token_test.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. status.sh (bash)
    4. langgraph_app.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. index_status.js (javascript)
    4. chat_cli.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. status.sh (bash)
    2. path_config.py (python)
    3. run_diagnostics.js (javascript)
    4. chat_cli.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. run_diagnostics.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. chat_cli.py (python)
    5. status.sh (bash)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. index_status.js (javascript)
    4. chat_cli.py (python)
    5. grafana_dash.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. status.sh (bash)
    4. langgraph_app.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. chat_cli.py (python)
    5. run_diagnostics.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. status.sh (bash)
    2. path_config.py (python)
    3. run_diagnostics.js (javascript)
    4. chat_cli.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. grafana_dash.py (python)
    4. chat_cli.py (python)
    5. run_diagnostics.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. status.sh (bash)
    4. langgraph_app.py (python)
    5. run_diagnostics.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[35/52] repo=agro q=How does the dashboard tab render system status?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/langgraph_app.py']
  top5 hit=False
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. telemetry.py (python)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. telemetry.py (python)
    4. langgraph_app.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. feedback.py (python)
    4. langgraph_app.py (python)
    5. feedback.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. telemetry.py (python)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. telemetry.py (python)
    4. chat_cli.py (python)
    5. feedback.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. telemetry.py (python)
    4. langgraph_app.py (python)
    5. feedback.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. telemetry.py (python)
    4. langgraph_app.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. telemetry.py (python)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. telemetry.py (python)
    4. chat_cli.py (python)
    5. trace.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. telemetry.py (python)
    2. path_config.py (python)
    3. feedback.py (python)
    4. chat_cli.py (python)
    5. telemetry.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[36/52] repo=agro q=Where is the telemetry logging for queries and feedback?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/telemetry.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. langgraph_app.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. chat_cli.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. langgraph_app.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. langgraph_app.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. langgraph_app.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. chat_cli.py (python)
    5. server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. langgraph_app.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. chat_cli.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. langgraph_app.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[37/52] repo=agro q=How does the MCP HTTP server work?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/mcp_server.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.js (javascript)
    4. chat_cli.py (python)
    5. server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.js (javascript)
    4. chat_cli.py (python)
    5. server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.js (javascript)
    4. langgraph_app.py (python)
    5. server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.js (javascript)
    4. paths.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.js (javascript)
    4. chat_cli.py (python)
    5. server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.js (javascript)
    4. chat_cli.py (python)
    5. server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                     