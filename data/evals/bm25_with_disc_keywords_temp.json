Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. tooltips.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. hybrid_search.py (python)
    2. path_config.py (python)
    3. hybrid_search.py (python)
    4. inspect_eval.py (python)
    5. hybrid_search.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[1/52] repo=agro q=Where is the hybrid search implementation that combines BM25 and vector search?
  top1=['/Users/davidmontgomery/agro-rag-engine/retrieval/hybrid_search.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. index_status.js (javascript)
    4. tooltips.js (javascript)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. index_repo.py (python)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. hybrid_search.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. onboarding.js (javascript)
    4. inspect_eval.py (python)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. index_status.js (javascript)
    4. tooltips.js (javascript)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. tooltips.js (javascript)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. index_repo.py (python)
    2. path_config.py (python)
    3. __init__.py (python)
    4. index_repo.py (python)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. index_status.js (javascript)
    4. tooltips.js (javascript)
    5. onboarding.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. index_status.js (javascript)
    4. tooltips.js (javascript)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. index_repo.py (python)
    2. path_config.py (python)
    3. indexing.js (javascript)
    4. tooltips.js (javascript)
    5. indexing.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. indexing.js (javascript)
    2. path_config.py (python)
    3. __init__.py (python)
    4. tooltips.js (javascript)
    5. index_status.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[2/52] repo=agro q=How does the indexing pipeline work? Where is the main indexer?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/indexing.js']
  top5 hit=False
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. test_backend.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. feedback.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. app.py (python)
    4. inspect_eval.py (python)
    5. reranker_info.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.py (python)
    2. path_config.py (python)
    3. reranker_info.py (python)
    4. inspect_eval.py (python)
    5. __init__.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[3/52] repo=agro q=Where is the FastAPI server and main API routes defined?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/app.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. inspect_eval.py (python)
    5. requirements-rag.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. inspect_eval.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. inspect_eval.py (python)
    5. requirements-rag.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. inspect_eval.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. requirements-rag.txt (text)
    4. inspect_eval.py (python)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. chat_cli.py (python)
    4. inspect_eval.py (python)
    5. requirements-rag.txt (text)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. requirements-rag.txt (text)
    4. tooltips.js (javascript)
    5. langgraph_app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. requirements-rag.txt (text)
    4. inspect_eval.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. tooltips.js (javascript)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. langgraph_app.py (python)
    2. path_config.py (python)
    3. langgraph_app.py (python)
    4. inspect_eval.py (python)
    5. chat_cli.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[4/52] repo=agro q=Where is the LangGraph conversational RAG pipeline implemented?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/langgraph_app.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. promote_reranker.py (python)
    2. path_config.py (python)
    3. reranker.py (python)
    4. tooltips.js (javascript)
    5. train_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. reranker.py (python)
    2. path_config.py (python)
    3. rerank.py (python)
    4. tooltips.js (javascript)
    5. train_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. promote_reranker.py (python)
    4. inspect_eval.py (python)
    5. reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. rerank.py (python)
    4. tooltips.js (javascript)
    5. reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. reranker.py (python)
    2. path_config.py (python)
    3. rerank.py (python)
    4. tooltips.js (javascript)
    5. promote_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. promote_reranker.py (python)
    2. path_config.py (python)
    3. train_reranker.py (python)
    4. inspect_eval.py (python)
    5. reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. reranker.py (python)
    2. path_config.py (python)
    3. promote_reranker.py (python)
    4. inspect_eval.py (python)
    5. rerank.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. promote_reranker.py (python)
    4. tooltips.js (javascript)
    5. reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. reranker.py (python)
    4. tooltips.js (javascript)
    5. promote_reranker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. train_reranker.py (python)
    2. path_config.py (python)
    3. promote_reranker.py (python)
    4. tooltips.js (javascript)
    5. rerank.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[5/52] repo=agro q=How does the cross-encoder reranker work?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/reranker.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.py (python)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. inspect_eval.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. inspect_eval.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. telemetry.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. tooltips.js (javascript)
    5. server.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. server.py (python)
    2. path_config.py (python)
    3. mcp_server.js (javascript)
    4. inspect_eval.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. inspect_eval.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. inspect_eval.py (python)
    5. server.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. app.py (python)
    4. inspect_eval.py (python)
    5. mcp_server.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. inspect_eval.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. mcp_server.js (javascript)
    2. path_config.py (python)
    3. server.py (python)
    4. inspect_eval.py (python)
    5. app.py (python)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[6/52] repo=agro q=Where is the MCP (Model Context Protocol) server for stdio transport?
  top1=['/Users/davidmontgomery/agro-rag-engine/server/mcp/server.py']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. inspect_eval.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. inspect_eval.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. config.js (javascript)
    4. tooltips.js (javascript)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. inspect_eval.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. inspect_eval.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. gui_debug.py (python)
    4. tooltips.js (javascript)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. tooltips.js (javascript)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. inspect_eval.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. tooltips.js (javascript)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. app.js (javascript)
    2. path_config.py (python)
    3. app.js (javascript)
    4. inspect_eval.py (python)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[7/52] repo=agro q=Where is the GUI main HTML and JavaScript?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/app.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. tooltips.js (javascript)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. tooltips.js (javascript)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. inspect_eval.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. inspect_eval.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. tooltips.js (javascript)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. tooltips.js (javascript)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. inspect_eval.py (python)
    5. rag-navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. tooltips.js (javascript)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. inspect_eval.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. navigation.js (javascript)
    2. path_config.py (python)
    3. navigation.js (javascript)
    4. inspect_eval.py (python)
    5. navigation.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[8/52] repo=agro q=How does the navigation system work in the GUI?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/navigation.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. inspect_eval.py (python)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. app.js (javascript)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. chat.js (javascript)
    2. path_config.py (python)
    3. chat.js (javascript)
    4. tooltips.js (javascript)
    5. chat.js (javascript)
ðŸ”§ Reranker backend: none
ðŸ”§ Reranker backend: none
[9/52] repo=agro q=Where is the chat interface implementation?
  top1=['/Users/davidmontgomery/agro-rag-engine/gui/js/chat.js']
  top5 hit=True
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. inspect_eval.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. inspect_eval.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. inspect_eval.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. inspect_eval.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. tooltips.js (javascript)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. inspect_eval.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. tooltips.js (javascript)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. inspect_eval.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                       [DEBUG] After RRF, top 5:
    1. ast_chunker.py (python)
    2. path_config.py (python)
    3. ast_chunker.py (python)
    4. inspect_eval.py (python)
    5. ast_chunker.py (python)
ðŸ”§ Reranker backend: none
Tokenize texts:   0%|          | 0/1 [00:00<?, ?it/s]                                                     BM25S Retrieve:   0%|          | 0/1 [00:00<?, ?it/s]                                                     